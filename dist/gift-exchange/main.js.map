{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pages/bad-link/bad-link.component.html","webpack:///./src/app/pages/bad-link/bad-link.component.scss","webpack:///./src/app/pages/bad-link/bad-link.component.ts","webpack:///./src/app/pages/exchange-lookup/exchange-lookup.component.html","webpack:///./src/app/pages/exchange-lookup/exchange-lookup.component.scss","webpack:///./src/app/pages/exchange-lookup/exchange-lookup.component.ts","webpack:///./src/app/pages/exchange/exchange-view/exchange-view.component.html","webpack:///./src/app/pages/exchange/exchange-view/exchange-view.component.scss","webpack:///./src/app/pages/exchange/exchange-view/exchange-view.component.ts","webpack:///./src/app/pages/exchange/exchange-view/update-email/update-email.component.html","webpack:///./src/app/pages/exchange/exchange-view/update-email/update-email.component.scss","webpack:///./src/app/pages/exchange/exchange-view/update-email/update-email.component.ts","webpack:///./src/app/pages/exchange/exchange.component.html","webpack:///./src/app/pages/exchange/exchange.component.scss","webpack:///./src/app/pages/exchange/exchange.component.ts","webpack:///./src/app/pages/exchange/group/group.component.html","webpack:///./src/app/pages/exchange/group/group.component.scss","webpack:///./src/app/pages/exchange/group/group.component.ts","webpack:///./src/app/pages/exchange/verify-email/verify-email.component.html","webpack:///./src/app/pages/exchange/verify-email/verify-email.component.scss","webpack:///./src/app/pages/exchange/verify-email/verify-email.component.ts","webpack:///./src/app/pages/exchange/wishlist-home/draw/draw.component.html","webpack:///./src/app/pages/exchange/wishlist-home/draw/draw.component.scss","webpack:///./src/app/pages/exchange/wishlist-home/draw/draw.component.ts","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-home.component.html","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-home.component.scss","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-home.component.ts","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component.html","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component.scss","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component.ts","webpack:///./src/app/pages/exchange/wishlist-home/wishlist/wishlist.component.html","webpack:///./src/app/pages/exchange/wishlist-home/wishlist/wishlist.component.scss","webpack:///./src/app/pages/exchange/wishlist-home/wishlist/wishlist.component.ts","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.scss","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/list-exchanges/list-exchanges.component.html","webpack:///./src/app/pages/list-exchanges/list-exchanges.component.scss","webpack:///./src/app/pages/list-exchanges/list-exchanges.component.ts","webpack:///./src/app/pages/send-login-email/send-login-email.component.html","webpack:///./src/app/pages/send-login-email/send-login-email.component.scss","webpack:///./src/app/pages/send-login-email/send-login-email.component.ts","webpack:///./src/app/pages/setup/final-step/final-step.component.html","webpack:///./src/app/pages/setup/final-step/final-step.component.scss","webpack:///./src/app/pages/setup/final-step/final-step.component.ts","webpack:///./src/app/pages/setup/setup.component.html","webpack:///./src/app/pages/setup/setup.component.scss","webpack:///./src/app/pages/setup/setup.component.ts","webpack:///./src/app/pages/setup/step1/step1.component.html","webpack:///./src/app/pages/setup/step1/step1.component.scss","webpack:///./src/app/pages/setup/step1/step1.component.ts","webpack:///./src/app/pages/setup/step2/step2.component.html","webpack:///./src/app/pages/setup/step2/step2.component.scss","webpack:///./src/app/pages/setup/step2/step2.component.ts","webpack:///./src/app/pages/setup/step3/step3.component.html","webpack:///./src/app/pages/setup/step3/step3.component.scss","webpack:///./src/app/pages/setup/step3/step3.component.ts","webpack:///./src/app/pages/setup/step4/step4.component.html","webpack:///./src/app/pages/setup/step4/step4.component.scss","webpack:///./src/app/pages/setup/step4/step4.component.ts","webpack:///./src/app/services/db-service.service.ts","webpack:///./src/app/services/firestore.service.ts","webpack:///./src/app/services/seo.service.ts","webpack:///./src/app/services/setup.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/template/footer/footer.component.html","webpack:///./src/app/template/footer/footer.component.scss","webpack:///./src/app/template/footer/footer.component.ts","webpack:///./src/app/template/nav/nav.component.html","webpack:///./src/app/template/nav/nav.component.scss","webpack:///./src/app/template/nav/nav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { HomeComponent } from \"./pages/home/home.component\";\r\nimport { SetupComponent } from \"./pages/setup/setup.component\";\r\nimport { Step1Component } from \"./pages/setup/step1/step1.component\";\r\nimport { Step2Component } from \"./pages/setup/step2/step2.component\";\r\nimport { Step3Component } from \"./pages/setup/step3/step3.component\";\r\nimport { Step4Component } from \"./pages/setup/step4/step4.component\";\r\nimport { FinalStepComponent } from \"./pages/setup/final-step/final-step.component\";\r\nimport { ListExchangesComponent } from \"./pages/list-exchanges/list-exchanges.component\";\r\n// import { AdminComponent } from './pages/admin/admin.component';\r\n// import { ExchangeAdminComponent } from './pages/admin/exchange-admin/exchange-admin.component';\r\n// import { UpdateEmailComponent } from './pages/admin/update-email/update-email.component';\r\nimport { ExchangeComponent } from \"./pages/exchange/exchange.component\";\r\nimport { WishlistComponent } from \"./pages/exchange/wishlist-home/wishlist/wishlist.component\";\r\nimport { DrawComponent } from \"./pages/exchange/wishlist-home/draw/draw.component\";\r\nimport { WishlistSavedComponent } from \"./pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component\";\r\nimport { WishlistHomeComponent } from \"./pages/exchange/wishlist-home/wishlist-home.component\";\r\nimport { ExchangeViewComponent } from \"./pages/exchange/exchange-view/exchange-view.component\";\r\nimport { SendLoginEmailComponent } from \"./pages/send-login-email/send-login-email.component\";\r\nimport { UpdateEmailComponent } from \"./pages/exchange/exchange-view/update-email/update-email.component\";\r\nimport { VerifyEmailComponent } from \"./pages/exchange/verify-email/verify-email.component\";\r\nimport { ExchangeLookupComponent } from \"./pages/exchange-lookup/exchange-lookup.component\";\r\nimport { BadLinkComponent } from \"./pages/bad-link/bad-link.component\";\r\n\r\nconst desc = \"Create secret santa gift exchanges\";\r\nconst tags =\r\n  \"gift, giving, exchange, secret, santa, christmas, holidays, shopping, family, co-workers, friends\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: HomeComponent,\r\n    data: {\r\n      title: \"Secret Santa Gift Exchange Tool\",\r\n      metatags: {\r\n        description: desc,\r\n        keywords: tags\r\n      }\r\n    }\r\n  },\r\n  {\r\n    path: \"setup\",\r\n    component: SetupComponent,\r\n    data: {\r\n      title: \"Gift Exchange Setup\",\r\n      metatags: {\r\n        description: desc,\r\n        keywords: tags\r\n      }\r\n    },\r\n    children: [\r\n      { path: \"step1\", component: Step1Component },\r\n      { path: \"step2\", component: Step2Component },\r\n      { path: \"step3\", component: Step3Component },\r\n      { path: \"step4\", component: Step4Component },\r\n      { path: \"finalize\", component: FinalStepComponent }\r\n    ]\r\n  },\r\n  {\r\n    path: \"exchange/:exchangeId/:curentUserId\",\r\n    component: ExchangeComponent,\r\n    data: {\r\n      title: \"Your Gift Exchange\",\r\n      metatags: {\r\n        description: desc,\r\n        keywords: tags\r\n      }\r\n    },\r\n    children: [\r\n      { path: \"\", component: ExchangeViewComponent },\r\n      { path: \"verify\", component: VerifyEmailComponent },\r\n      { path: \"update-email/:uidToUpdate\", component: UpdateEmailComponent },\r\n      {\r\n        path: \"wishlist\",\r\n        component: WishlistHomeComponent,\r\n        children: [\r\n          { path: \"edit\", component: WishlistComponent },\r\n          { path: \"edit/wishlistSaved\", component: WishlistSavedComponent },\r\n          { path: \"drawn\", component: DrawComponent }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: \"exchange-lookup/:userEmail\",\r\n    component: ExchangeLookupComponent,\r\n    data: {\r\n      title: \"Your Exchanges\",\r\n      metatags: {\r\n        description: desc,\r\n        keywords: tags\r\n      }\r\n    }\r\n  },\r\n  {\r\n    path: \"sendLoginEmail\",\r\n    component: SendLoginEmailComponent,\r\n    data: {\r\n      title: \"Send a new login email\",\r\n      metatags: {\r\n        description: desc,\r\n        keywords: tags\r\n      }\r\n    }\r\n  },\r\n  {\r\n    path: \"list-all\",\r\n    component: ListExchangesComponent,\r\n    data: {\r\n      title: \"See all exchanges\",\r\n      metatags: {\r\n        description: desc,\r\n        keywords: tags\r\n      }\r\n    }\r\n  },\r\n  { path: \"**\", component: BadLinkComponent, data: {\r\n\ttitle: \"Page not found\",\r\n\tmetatags: {\r\n\t  description: desc,\r\n\t  keywords: tags\r\n\t}\r\n  } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<app-nav></app-nav>\\r\\n<main role=\\\"main\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    <app-footer></app-footer>\\r\\n</main>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from \"@angular/core\";\r\nimport { Angulartics2GoogleAnalytics } from \"angulartics2/ga\";\r\nimport { SEOService } from \"./services/seo.service\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\nexport class AppComponent {\r\n  constructor(\r\n    angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics,\r\n    private seoService: SEOService\r\n  ) {\r\n    angulartics2GoogleAnalytics.startTracking();\r\n    this.seoService.addSeoData();\r\n  }\r\n  title = \"gift-exchange\";\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AdsenseModule } from 'ng2-adsense';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './template/nav/nav.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { FooterComponent } from './template/footer/footer.component';\r\nimport { Step2Component } from './pages/setup/step2/step2.component';\r\nimport { Step3Component } from './pages/setup/step3/step3.component';\r\nimport { Step1Component } from './pages/setup/step1/step1.component';\r\nimport { Step4Component } from './pages/setup/step4/step4.component';\r\nimport { FinalStepComponent } from './pages/setup/final-step/final-step.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from '../environments/environment';\r\nimport { ListExchangesComponent } from './pages/list-exchanges/list-exchanges.component';\r\n\r\nimport { Angulartics2Module } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\r\n\r\nimport { DbServiceService } from './services/db-service.service';\r\nimport { SetupService } from './services/setup.service';\r\nimport { SetupComponent } from './pages/setup/setup.component';\r\n// import { AdminComponent } from './pages/admin/admin.component';\r\n// import { ExchangeAdminComponent } from './pages/admin/exchange-admin/exchange-admin.component';\r\nimport { WishlistComponent } from './pages/exchange/wishlist-home/wishlist/wishlist.component';\r\n// import { UpdateEmailComponent } from './pages/admin/update-email/update-email.component';\r\nimport { ExchangeComponent } from './pages/exchange/exchange.component';\r\nimport { DrawComponent } from './pages/exchange/wishlist-home/draw/draw.component';\r\nimport { GroupComponent } from './pages/exchange/group/group.component';\r\nimport { WishlistSavedComponent } from './pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component';\r\nimport { WishlistHomeComponent } from './pages/exchange/wishlist-home/wishlist-home.component';\r\nimport { FirestoreService } from './services/firestore.service';\r\nimport { ExchangeViewComponent } from './pages/exchange/exchange-view/exchange-view.component';\r\nimport { SendLoginEmailComponent } from './pages/send-login-email/send-login-email.component';\r\nimport { UpdateEmailComponent } from './pages/exchange/exchange-view/update-email/update-email.component';\r\nimport { VerifyEmailComponent } from './pages/exchange/verify-email/verify-email.component';\r\nimport { ExchangeLookupComponent } from './pages/exchange-lookup/exchange-lookup.component';\r\nimport { BadLinkComponent } from './pages/bad-link/bad-link.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    FooterComponent,\r\n    Step2Component,\r\n    Step3Component,\r\n    Step1Component,\r\n    Step4Component,\r\n    FinalStepComponent,\r\n    ListExchangesComponent,\r\n    SetupComponent,\r\n    // AdminComponent,\r\n    // ExchangeAdminComponent,\r\n    WishlistComponent,\r\n    // UpdateEmailComponent,\r\n    ExchangeComponent,\r\n    DrawComponent,\r\n    GroupComponent,\r\n    WishlistSavedComponent,\r\n    WishlistHomeComponent,\r\n    ExchangeViewComponent,\r\n    SendLoginEmailComponent,\r\n    UpdateEmailComponent,\r\n    VerifyEmailComponent,\r\n    ExchangeLookupComponent,\r\n    BadLinkComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AngularFireModule.initializeApp(environment.firebase), // imports firebase/app needed for everything\r\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\r\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\r\n    AngularFireStorageModule, // imports firebase/storage only needed for storage features\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Angulartics2Module.forRoot({\r\n      pageTracking: {\r\n        clearIds: true,\r\n      }\r\n    }),\r\n    AdsenseModule.forRoot({\r\n      adClient: 'ca-pub-8196182321788212',\r\n      // adSlot: 7259870550,\r\n    }),\r\n  ],\r\n  providers: [\r\n    DbServiceService,\r\n    SetupService,\r\n    FirestoreService,\r\n    \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<p>\\r\\n  bad-link works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JhZC1saW5rL2JhZC1saW5rLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-bad-link',\r\n  templateUrl: './bad-link.component.html',\r\n  styleUrls: ['./bad-link.component.scss']\r\n})\r\nexport class BadLinkComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.router.navigate([''])\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container my-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Hi {{(user)?.name}}</h1>\\r\\n      <p>Email: {{(user)?.email}}</p>\\r\\n      <p>Here is a list of the exchanges you belong to for this email address.</p>\\r\\n      <ul>\\r\\n        <li *ngFor=\\\"let exchange of (exchanges)\\\"><a [routerLink]=\\\"['/exchange', exchange.id, exchange.userId]\\\">{{exchange.name}}</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlLWxvb2t1cC9leGNoYW5nZS1sb29rdXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { User } from \"src/app/models/user.model\";\r\nimport { DbServiceService } from \"src/app/services/db-service.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-exchange-lookup\",\r\n  templateUrl: \"./exchange-lookup.component.html\",\r\n  styleUrls: [\"./exchange-lookup.component.scss\"]\r\n})\r\nexport class ExchangeLookupComponent implements OnInit {\r\n  public user: User;\r\n  public userExchanges: [];\r\n  public exchanges = [];\r\n  private userEmail: \"\";\r\n\r\n  constructor(\r\n    private db: DbServiceService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.route.params.subscribe(async params => {\r\n      this.userEmail = params[\"userEmail\"];\r\n    });\r\n    this.db.getUserOnce(this.userEmail).then(async user => {\r\n      this.user = user;\r\n      this.userExchanges = this.user.exchanges;\r\n      for (let ex of this.userExchanges) {\r\n        const exData = await this.getExchangeInfo(ex, this.userEmail);\r\n        await this.exchanges.push({\r\n          id: ex,\r\n          name: exData.name,\r\n          userId: exData.userId\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  async getExchangeInfo(exId, userEmail): Promise<any> {\r\n    let exData = {};\r\n    return this.db.getExchangeOnce(exId).then(async exchange => {\r\n      exData[\"name\"] = exchange.name;\r\n      if ((userEmail = exchange.adminEmail)) {\r\n        exData[\"userId\"] = await exchange.adminUid;\r\n      } else {\r\n        await this.db.getExchangePeopleOnce(exId).then(async people => {\r\n          for (let person in people) {\r\n            if (people[person].email == userEmail) {\r\n              exData[\"userId\"] = people[person].id;\r\n            }\r\n          }\r\n        });\r\n      }\r\n      return exData;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row mb-5\\\">\\r\\n  <div class=\\\"col text-center\\\">\\r\\n    <h3>{{ (exchange | async)?.name }}</h3>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row mt-3\\\">\\r\\n  <div class=\\\"col-sm-8\\\">\\r\\n    <h4>Welcome {{ currentUser?.name.capitalize() }} <small *ngIf=\\\"isAdmin\\\">  (Admin) </small></h4>\\r\\n    <ul *ngIf=\\\"participant\\\">\\r\\n      <li *ngIf=\\\"currentUser && participant\\\">\\r\\n        <a [routerLink]=\\\"['/exchange', exchangeId, (currentUser)?.id, 'wishlist', 'edit']\\\">\\r\\n          {{ !currentUser?.wishlistCreated ? \\\"Create your wishlist\\\" : \\\"Update your wish list\\\" }}\\r\\n        </a>\\r\\n      </li>\\r\\n      <li>\\r\\n        <a (click)=\\\"updateUsersEmail()\\\">Change your email address</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <h4 class=\\\"text-success\\\">You drew {{currentUser?.nameDrawn.capitalize()}}'s name!</h4>\\r\\n    <ul *ngIf=\\\"participant\\\">\\r\\n      <li *ngIf=\\\"currentUser && participant\\\"><a [routerLink]=\\\"['/exchange', exchangeId, (currentUser)?.id, 'wishlist', 'drawn']\\\">View\\r\\n          {{currentUser?.nameDrawn.capitalize()}}'s wishlist</a></li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <h5>Settings</h5>\\r\\n    <ul>\\r\\n      <li>Budget: ${{ (exchange | async)?.budget }}</li>\\r\\n      <li>Date: {{ (exchange | async)?.date.month }}/{{ (exchange | async)?.date.day }}/{{ (exchange |\\r\\n        async)?.date.year }}</li>\\r\\n      <li *ngIf=\\\"isAdmin && includeAdmin\\\">I'm Included: Yes</li>\\r\\n      <li>Admin Sees Names: {{ showAdminNames }}</li>\\r\\n      <!-- <li># of Names Per Person: {{ (exchange | async)?.nameCount }}</li> -->\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h3>People</h3>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"mt-2 mb-2 pt-2 pb-2 border-bottom\\\" *ngFor=\\\"let ex of (people | async) ; let i of index;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <h4><span (click)=\\\"loadExchangeAs(ex.id)\\\">{{ex.name.capitalize()}}</span></h4>\\r\\n          </div>\\r\\n          <div class=\\\"col col-sm-4\\\">\\r\\n            <span *ngIf=\\\"isAdmin && showAdminNames == 'Yes'\\\">Name drawn: {{ex.nameDrawn.capitalize()}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-4\\\" *ngIf=\\\"isAdmin\\\">\\r\\n            Their Wishlist:&nbsp;\\r\\n            <span class='text-success' *ngIf=\\\"ex.wishlistCreated\\\">Wishlist Set</span>\\r\\n            <span class='text-danger' *ngIf=\\\"!ex.wishlistCreated\\\"><strong>Wishlist Not Set</strong></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">{{ ex.email }} <small *ngIf=\\\"isAdmin\\\">(<a (click)=\\\"updateUsersEmail(ex.id)\\\">edit</a>)</small></div>\\r\\n          <div class=\\\"col-sm-4 offset-md-4\\\" *ngIf=\\\"isAdmin\\\">\\r\\n            Viewed Their Name's Wishlist:&nbsp;\\r\\n            <span *ngIf=\\\"ex.viewedDrawnWishlist\\\" class='text-success'>Yes</span>\\r\\n            <span *ngIf=\\\"!ex.viewedDrawnWishlist\\\" class='text-danger'><strong>No</strong></span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL2V4Y2hhbmdlLXZpZXcvZXhjaGFuZ2Utdmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DbServiceService } from \"../../../services/db-service.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Exchange } from \"../../../models/exchange.model\";\r\nimport { User } from \"src/app/models/user.model\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-exchange-view\",\r\n  templateUrl: \"./exchange-view.component.html\",\r\n  styleUrls: [\"./exchange-view.component.scss\"]\r\n})\r\nexport class ExchangeViewComponent implements OnInit {\r\n  public exchange: Observable<Exchange>;\r\n  public people: Observable<any>;\r\n  public currentUser: User;\r\n  public isAdmin: boolean;\r\n  public showAdminNames: string;\r\n  public includeAdmin: boolean;\r\n  public participant: boolean;\r\n  private exchangeId: string;\r\n  private curentUserId: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private db: DbServiceService,\r\n    private userSrv: UserService\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    await this.route.parent.params.subscribe(async params => {\r\n      this.exchangeId = params[\"exchangeId\"];\r\n      this.userSrv.setActiveUserId(params[\"curentUserId\"]);\r\n      this.curentUserId = this.userSrv.getActiveUserId();\r\n    });\r\n    await this.loadExchange();\r\n      await this.loadPeople();\r\n      await this.db\r\n        .getExchangee(this.exchangeId, this.curentUserId)\r\n        .subscribe(async user => {\r\n          if (user) {\r\n            this.currentUser = user;\r\n            this.isAdmin = this.currentUser.isAdmin || false;\r\n            this.participant = true;\r\n            this.exchange.subscribe(async exchange => {\r\n              this.showAdminNames = exchange.showAdminNames ? \"Yes\" : \"No\";\r\n              this.includeAdmin = exchange.includeAdmin;\r\n            });\r\n          } else {\r\n            this.exchange.subscribe(async exchange => {\r\n              if (\r\n                !exchange.includeAdmin &&\r\n                this.curentUserId === exchange.adminUid\r\n              ) {\r\n                this.showAdminNames = exchange.showAdminNames ? \"Yes\" : \"No\";\r\n                this.includeAdmin = exchange.includeAdmin;\r\n                this.currentUser = {\r\n                  name: exchange.adminName,\r\n                  uid: exchange.adminUid\r\n                };\r\n                this.isAdmin = true;\r\n                this.participant = false;\r\n              }\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  updateUsersEmail(userId = \"self\") {\r\n    this.userSrv.emailToUpdateId = userId;\r\n    this.router.navigate([\r\n      \"/exchange\",\r\n      this.exchangeId,\r\n      this.currentUser.id,\r\n      \"update-email\",\r\n      userId\r\n    ]);\r\n  }\r\n\r\n  async loadExchange() {\r\n    // load data from firestore for this exhange\r\n    this.exchange = await this.db.getExchange(this.exchangeId);\r\n  }\r\n\r\n  loadPeople() {\r\n    this.people = this.db.getExchangePeople(this.exchangeId);\r\n  }\r\n\r\n  loadExchangeAs(id) {\r\n    this.router.navigate([\"/exchange/\" + this.exchangeId + \"/\" + id]);\r\n  }\r\n\r\n  viewed(viewed: boolean) {\r\n    return viewed\r\n      ? \"<span class='text-success'>Yes</span>\"\r\n      : \"<span class='text-danger'>No</span>\";\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col col-lg-12 justify-content-md-center\\\">\\r\\n    <h1>Update {{ (userToUpdate)?.name }}'s Email Address</h1>\\r\\n    <p><a [routerLink]=\\\"['/exchange', exchangeId, curentUserId]\\\">&laquo; Go back to\\r\\n        exchange. </a></p>\\r\\n    <p *ngIf=\\\"savedMsg\\\" [class.text-success]=\\\"savedMsgPass\\\" [class.text-warning]=\\\"!savedMsgPass\\\" class=\\\"font-weight-bold\\\">\\r\\n      {{ savedMsg }}\\r\\n    </p>\\r\\n    <h5>Current Email Adddress: {{ (userToUpdate)?.email }}</h5>\\r\\n    <p>Just enter the new email address below and click save.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col col-lg-8 justify-content-md-center\\\">\\r\\n    <form class=\\\"col-6\\\" [formGroup]=\\\"emailForm\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"email\\\" [class.is-invalid]=\\\"emailForm.get('email').invalid && emailForm.get('email').touched\\\" class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Your Email Address\\\" formControlName=\\\"email\\\">\\r\\n        <small class=\\\"text-warning\\\" *ngIf=\\\"emailForm.get('email').invalid && emailForm.get('email').touched\\\">*required\\r\\n          and must be formatted correctly</small>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" [disabled]=\\\"emailForm.invalid && emailForm.touched\\\" class=\\\"btn btn-success\\\">Save New Email\\r\\n        Address</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL2V4Y2hhbmdlLXZpZXcvdXBkYXRlLWVtYWlsL3VwZGF0ZS1lbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DbServiceService } from \"src/app//services/db-service.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Exchange } from \"src/app//models/exchange.model\";\r\nimport { User } from \"src/app/models/user.model\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { SetupService } from \"src/app/services/setup.service\";\r\n\r\n@Component({\r\n  selector: \"app-update-email\",\r\n  templateUrl: \"./update-email.component.html\",\r\n  styleUrls: [\"./update-email.component.scss\"]\r\n})\r\nexport class UpdateEmailComponent implements OnInit {\r\n  public savedMsg: string;\r\n  public savedMsgPass: boolean;\r\n  public exchangeId: string;\r\n  public curentUserId: string;\r\n  public uidToUpdate: string;\r\n  public userToUpdate: any;\r\n  public emailForm: FormGroup;\r\n\r\n  public exchange: Observable<Exchange>;\r\n  public currentUser: User;\r\n  public isAdmin: boolean;\r\n\r\n  constructor(\r\n    private _setupService: SetupService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private db: DbServiceService,\r\n    private userSrv: UserService\r\n  ) {\r\n    this.route.parent.params.subscribe(async params => {\r\n      this.exchangeId = params[\"exchangeId\"];\r\n      this.curentUserId = params[\"curentUserId\"];\r\n      await this.route.params.subscribe(async params => {\r\n        this.uidToUpdate = params[\"uidToUpdate\"];\r\n      });\r\n      this.exchange = await this.db.getExchange(this.exchangeId);\r\n      await this.db\r\n        .getExchangee(this.exchangeId, this.curentUserId)\r\n        .subscribe(async user => {\r\n          if (user) {\r\n            this.currentUser = user;\r\n            this.isAdmin = this.currentUser.isAdmin || false;\r\n            this.exchange.subscribe(async exchange => {\r\n              // this.showAdminNames = exchange.showAdminNames ? \"Yes\" : \"No\";\r\n              // this.includeAdmin = exchange.includeAdmin;\r\n            });\r\n          } else {\r\n            this.exchange.subscribe(async exchange => {\r\n              if (\r\n                !exchange.includeAdmin &&\r\n                this.curentUserId === exchange.adminUid\r\n              ) {\r\n                this.currentUser = {\r\n                  name: exchange.adminName,\r\n                  uid: exchange.adminUid\r\n                };\r\n                this.isAdmin = true;\r\n              }\r\n            });\r\n          }\r\n          if (this.uidToUpdate != \"self\") {\r\n            await this.db\r\n              .getExchangee(this.exchangeId, this.uidToUpdate)\r\n              .subscribe(async user => {\r\n                this.userToUpdate = user;\r\n              });\r\n          } else {\r\n            this.userToUpdate = this.currentUser;\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.emailForm = this.fb.group({\r\n      email: [\"\", [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  submitData() {\r\n    const newEmail = this.emailForm.get(\"email\").value;\r\n\r\n    if (this.uidToUpdate == \"self\") {\r\n      // update your own email address\r\n      this.db\r\n        .updateExchagee(this.exchangeId, this.currentUser.id, {\r\n          email: newEmail\r\n        })\r\n        .then(updatedUser => {\r\n          this.db.addUser(this.userToUpdate, this.exchangeId).then(data => {\r\n            // console.log(\"saved msg\");\r\n            this.setSavedMsg(\r\n              `${this.userToUpdate.name}'s Email Address Has Been Updated.`,\r\n              true\r\n            );\r\n          });\r\n        });\r\n    } else if (this.uidToUpdate && this.uidToUpdate != \"\") {\r\n      // update some one elses email address\r\n      if (this.isAdmin) {\r\n        this.db\r\n          .updateExchagee(this.exchangeId, this.uidToUpdate, {\r\n            email: newEmail\r\n          })\r\n          .then(updatedUser => {\r\n            this.db.addUser(this.userToUpdate, this.exchangeId).then(data => {\r\n              // console.log(\"saved msg\");\r\n              this.setSavedMsg(\r\n                `${this.userToUpdate.name}'s Email Address Has Been Updated.`,\r\n                true\r\n              );\r\n            });\r\n          });\r\n      } else {\r\n        // console.log(\"you are not an admin\");\r\n      }\r\n      this.setSavedMsg(`There was a problem.`, false);\r\n    }\r\n  }\r\n\r\n  setSavedMsg(txt, pass: boolean) {\r\n    this.savedMsg = txt;\r\n    this.savedMsgPass = pass;\r\n    if (this.savedMsg && this.savedMsg != \"\") {\r\n      setTimeout(() => {\r\n        this.savedMsg = null;\r\n        this.savedMsgPass = null;\r\n      }, 12000);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container my-5\\\">\\r\\n<router-outlet></router-outlet>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL2V4Y2hhbmdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-exchange',\r\n  templateUrl: './exchange.component.html',\r\n  styleUrls: ['./exchange.component.scss']\r\n})\r\nexport class ExchangeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  group works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL2dyb3VwL2dyb3VwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-group',\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.scss']\r\n})\r\nexport class GroupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Thank you for verifying!</h1>\\r\\n      <h3>Your gift exchange has started and we're letting everyone know right now!</h3>\\r\\n      <p> <a [routerLink]=\\\"['/exchange', exchangeId, curentUserId]\\\">Click here to view your exchange.</a></p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3ZlcmlmeS1lbWFpbC92ZXJpZnktZW1haWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DbServiceService } from \"../../../services/db-service.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Exchange } from \"../../../models/exchange.model\";\r\nimport { User } from \"src/app/models/user.model\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-verify-email\",\r\n  templateUrl: \"./verify-email.component.html\",\r\n  styleUrls: [\"./verify-email.component.scss\"]\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n  public exchange: Observable<Exchange>;\r\n  public people: Observable<any>;\r\n  public currentUser: User;\r\n  public isAdmin: boolean;\r\n  public showAdminNames: string;\r\n  public includeAdmin: boolean;\r\n  public participant: boolean;\r\n  public exchangeId: string;\r\n  public curentUserId: string;\r\n\r\n  private exchangeDoc: Exchange;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private db: DbServiceService,\r\n    private userSrv: UserService\r\n  ) {\r\n    this.route.parent.params.subscribe(async params => {\r\n      this.exchangeId = params[\"exchangeId\"];\r\n      this.curentUserId = params[\"curentUserId\"];\r\n      this.exchange = await this.db.getExchange(this.exchangeId);\r\n      await this.db\r\n        .getExchangee(this.exchangeId, this.curentUserId)\r\n        .subscribe(async user => {\r\n          if (user) {\r\n            this.currentUser = user;\r\n            this.isAdmin = this.currentUser.isAdmin || false;\r\n            await this.exchange.subscribe(async exchange => {\r\n              this.exchangeDoc = exchange;\r\n              this.verify();\r\n            });\r\n          } else {\r\n            await this.exchange.subscribe(async exchange => {\r\n              this.exchangeDoc = exchange;\r\n              if (\r\n                this.curentUserId === exchange.adminUid\r\n              ) {\r\n                this.currentUser = {\r\n                  name: exchange.adminName,\r\n                  uid: exchange.adminUid\r\n                };\r\n                this.isAdmin = true;\r\n              }\r\n              this.verify();\r\n            });\r\n          }\r\n\r\n          \r\n        });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  verify() {\r\n    if (\r\n      this.isAdmin &&\r\n      !this.exchangeDoc.hasOwnProperty(\"adminVerifiedEmail\")\r\n    ) {\r\n      // verify the exchange\r\n      this.db.updateExchange(this.exchangeId, {\r\n        adminVerifiedEmail: true\r\n      });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <h2>{{(currentUser)?.nameDrawn.capitalize()}}'s Wishlist</h2>\\r\\n        <p>\\r\\n            <a [routerLink]=\\\"['/exchange', exchangeId, currentUserUid]\\\">&laquo; Go back to exchange.</a>\\r\\n        </p>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-7 pl-4 pr-4\\\">\\r\\n      <div *ngFor=\\\"let item of (wishlist|async)\\\" class=\\\"row border-bottom pt-1 pb-2 mb-2 mt-1\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          {{ item.itemName.capitalize() }}\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6 text-right\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" *ngIf=\\\"item.itemUrl\\\" (click)=\\\"openItemUrl(item)\\\">Open {{(currentUser)?.nameDrawn.capitalize()}}'s Link</button>\\r\\n          <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!item.itemUrl\\\" (click)=\\\"openItemUrl(item)\\\">Search Amazon</button>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-5\\\">\\r\\n    \\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3dpc2hsaXN0LWhvbWUvZHJhdy9kcmF3LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DbServiceService } from 'src/app/services/db-service.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-draw',\r\n  templateUrl: './draw.component.html',\r\n  styleUrls: ['./draw.component.scss']\r\n})\r\nexport class DrawComponent implements OnInit {\r\n\r\n  public wishlist: Observable<any>;\r\n  public wishlistSaved: [];\r\n  public exchange: {};\r\n  public currentUser: User;\r\n  public currentUserUid: string;\r\n  public exchangeId: string;\r\n  public tag: 'jmheist08-20';\r\n  private exDoc;\r\n\r\n  constructor(\r\n    private router: ActivatedRoute,\r\n    private route: Router,\r\n    private db: DbServiceService,\r\n    private userSrv: UserService\r\n\r\n  ) {\r\n    this.router.parent.parent.params.subscribe(params => {\r\n      this.exchangeId = params['exchangeId'];\r\n      this.userSrv.setActiveUserId(params['curentUserId']);\r\n    });\r\n    this.db.getExchangee(this.exchangeId, this.userSrv.getActiveUserId()).subscribe(user => {\r\n      this.currentUser = user;\r\n      this.currentUserUid = this.currentUser.id;\r\n      this.wishlist = this.db.getWishlist(this.exchangeId, this.currentUser.drawnUid);\r\n      // var sub = this.wishlist.subscribe(items => { \r\n      //   console.log(items)\r\n      // });\r\n      if (!this.currentUser.viewedDrawnWishlist) {\r\n        this.currentUser.viewedDrawnWishlist = true;\r\n        this.db.addExchangeesToExchange( this.exchangeId, this.currentUser );\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateQueryStringParameter(uri, key, value) {\r\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\r\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\r\n    if (uri.match(re)) {\r\n      return uri.replace(re, '$1' + key + \"=\" + value + '$2');\r\n    }\r\n    else {\r\n      return uri + separator + key + \"=\" + value;\r\n    }\r\n  }\r\n\r\n  openItemUrl(item) {\r\n    if (item.itemUrl) {\r\n      if (item.itemUrl.match(/https?:\\/\\/(?=(?:....)?amazon|smile)(www|smile)\\S+com(((?:\\/(?:dp|gp)\\/([A-Z0-9]+))?\\S*[?&]?(?:tag=))?\\S*?)(?:#)?(\\w*?-\\w{2})?(\\S*)(#?\\S*)+/g)) {\r\n        item.itemUrl = this.updateQueryStringParameter(item.itemUrl, 'tag', this.tag);\r\n      }\r\n      window.open(item.itemUrl,'_blank');\r\n    } else {\r\n      const url = \"https://www.amazon.com/s/?field-keywords=\"+item.itemName.split(\" \").join(\"+\")+\"&tag=\"+this.tag;\r\n      window.open(url,'_blank');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3dpc2hsaXN0LWhvbWUvd2lzaGxpc3QtaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-wishlist-home',\r\n  templateUrl: './wishlist-home.component.html',\r\n  styleUrls: ['./wishlist-home.component.scss']\r\n})\r\nexport class WishlistHomeComponent implements OnInit {\r\n\r\n  constructor() {\r\n    // if the user is viewing their wishlist, take them to edit page\r\n    // otherwise, take them to the draw page where they see their name's wishlist\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <p>Your wishlist has been saved!</p>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"goBack()\\\">Go Back</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3dpc2hsaXN0LWhvbWUvd2lzaGxpc3Qtc2F2ZWQvd2lzaGxpc3Qtc2F2ZWQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-wishlist-saved',\r\n  templateUrl: './wishlist-saved.component.html',\r\n  styleUrls: ['./wishlist-saved.component.scss']\r\n})\r\nexport class WishlistSavedComponent implements OnInit {\r\n  prevUrl;\r\n  constructor(\r\n    private router: Router,\r\n  ) {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  goBack() {\r\n    // console.log(this.prevUrl);\r\n    window.history.back()\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row pb-4\\\">\\r\\n    <div class=\\\"col col-lg-5\\\">\\r\\n        <h2>Wishlist for {{ currentUser?.name }}</h2>\\r\\n        <p>\\r\\n            <a [class.disabled]=\\\"isDirty\\\" [routerLink]=\\\"['/exchange', exchangeId, currentUserUid]\\\">&laquo; Go back to exchange.  </a><span *ngIf=\\\"savedMsg\\\" class=\\\"text-success font-weight-bold\\\">{{ savedMsg }}</span>\\r\\n        </p>\\r\\n    </div>\\r\\n    <div class=\\\"col col-lg-7 text-right align-self-end\\\">\\r\\n        <p><small>Hint: You can add links to items from amazon and other sites!</small></p>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <ul>\\r\\n            <li *ngFor=\\\"let item of (wishlist|async)\\\">{{ item?.name }} --- {{ item?.uid }}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <ul>\\r\\n            <li *ngFor=\\\"let item of wishlistForm.get('items').value\\\">{{ item.name }} --- {{ item.uid }}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div> -->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n        <form [formGroup]=\\\"wishlistForm\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\r\\n            <div formArrayName=\\\"items\\\" *ngFor=\\\"let item of wishlistForm.get('items').controls; let i = index; last as isLast;\\\"\\r\\n                class=\\\"mb-3 pb-3 border-bottom\\\">\\r\\n                <div class=\\\"\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <div class=\\\"row pb-1\\\">\\r\\n                        <label for=\\\"itemName\\\" class=\\\"col-sm-2 col-form-label\\\">Wishlist Item</label>\\r\\n                        <div class=\\\"col-sm-10 btn-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"itemName\\\" formControlName=\\\"itemName\\\"\\r\\n                                placeholder=\\\"Enter your gift ideas here\\\">\\r\\n                            <button type=\\\"button\\\" [class.d-none]=\\\"wishlistForm.get('items').controls[i].get('itemName').pristine && wishlistForm.get('items').controls[i].get('itemName').value == '' && isLast\\\"\\r\\n                                class=\\\"close mx-1\\\" aria-label=\\\"Close\\\" (click)=\\\"remove(i)\\\">\\r\\n                                <span class=\\\"text-primary\\\" aria-hidden=\\\"true\\\">&times;</span>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <label for=\\\"itemUrl\\\" class=\\\"col-sm-2 col-form-label\\\">Item Link</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                            <input [class.is-invalid]=\\\"wishlistForm.get('items').controls[i].get('itemUrl').invalid\\\" class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"itemUrl\\\" name=\\\"itemUrl\\\" placeholder=\\\"Optionally add a link to the item\\\">\\r\\n                            <small class=\\\"text-warning\\\" *ngIf=\\\"wishlistForm.get('items').controls[i].get('itemUrl').invalid\\\">*url is not in correct format. </small> \\r\\n                            <!-- && wishlistForm.get('items').controls[i].get('itemUrl').value.length > 0 -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <input class=\\\"form-control\\\" type=\\\"hidden\\\" formControlName=\\\"itemUid\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"wishlistForm.invalid\\\">Save Wishlist</button>\\r\\n                <!-- <button type=\\\"button\\\" class=\\\"btn-secondary btn-sm ml-2\\\" (click)=\\\"addItem()\\\">Add another Gift Idea</button> -->\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n        <!-- <h3>Hints</h3>\\r\\n        <ul>\\r\\n            <li>You can add links to gift ideas from sites like amazon!</li>\\r\\n        </ul> -->\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <!-- <div class=\\\"col\\\">load me\\r\\n        <script type=\\\"text/javascript\\\">\\r\\n            amzn_assoc_placement = \\\"adunit0\\\";\\r\\n            amzn_assoc_search_bar = \\\"false\\\";\\r\\n            amzn_assoc_tracking_id = \\\"jmheist08-20\\\";\\r\\n            amzn_assoc_ad_mode = \\\"search\\\";\\r\\n            amzn_assoc_ad_type = \\\"smart\\\";\\r\\n            amzn_assoc_marketplace = \\\"amazon\\\";\\r\\n            amzn_assoc_region = \\\"US\\\";\\r\\n            amzn_assoc_title = \\\"Gift Ideas\\\";\\r\\n            amzn_assoc_default_search_phrase = \\\"Gifts\\\"; //&low-price=&high-price=25\\r\\n            amzn_assoc_default_low_price = \\\"0\\\";\\r\\n            amzn_assoc_default_high_price = \\\"25\\\";\\r\\n            amzn_assoc_default_category = \\\"All\\\";\\r\\n            amzn_assoc_linkid = \\\"77b11a3f5b5059a6640e4a65c8cd2351\\\";\\r\\n            </script>\\r\\n            <script src=\\\"//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US\\\"></script>\\r\\n    </div> -->\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3dpc2hsaXN0LWhvbWUvd2lzaGxpc3Qvd2lzaGxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscribable } from 'rxjs';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DbServiceService } from 'src/app/services/db-service.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-wishlist',\r\n    templateUrl: './wishlist.component.html',\r\n    styleUrls: ['./wishlist.component.scss']\r\n})\r\nexport class WishlistComponent implements OnInit {\r\n\r\n    public wishlist: Observable<any>;\r\n    public wishlistSaved: [];\r\n    public exchange: {};\r\n    public currentUser: User;\r\n    public currentUserUid: string;\r\n    public savedMsg: string;\r\n    public isDirty = false;\r\n    public exchangeId: string;\r\n    private exDoc;\r\n    private sub = undefined;\r\n\r\n    constructor(\r\n        private router: ActivatedRoute,\r\n        private route: Router,\r\n        private db: DbServiceService,\r\n        private userSrv: UserService,\r\n        private fb: FormBuilder,\r\n\r\n    ) {\r\n        this.router.parent.parent.params.subscribe(params => {\r\n            this.exchangeId = params['exchangeId'];\r\n            this.userSrv.setActiveUserId(params['curentUserId']);\r\n        });\r\n        var exSub = this.db.getExchangee(this.exchangeId, this.userSrv.getActiveUserId()).subscribe(user => {\r\n            this.currentUser = user;\r\n            this.currentUserUid = this.currentUser.id;\r\n            this.wishlist = this.db.getWishlist(this.exchangeId, this.currentUser.id);\r\n            var sub = this.wishlist.subscribe(items => {\r\n                items.forEach(item => {\r\n                    this.addItem(item.itemName, item.itemUrl, item.itemUid)\r\n                });\r\n                sub.unsubscribe();\r\n                this.addItem() // add a blank\r\n                this.watchForm();\r\n            });\r\n            exSub.unsubscribe();\r\n        });\r\n    }\r\n\r\n    wishlistForm = this.fb.group({\r\n        items: this.fb.array([])\r\n    });\r\n\r\n    createItemFields(itemName = \"\", itemUrl = \"\", itemUid = \"\"): FormGroup {\r\n        const reg = \"\";\r\n        return this.fb.group({\r\n            itemName: [itemName],\r\n            itemUrl: [itemUrl, Validators.pattern(/^(ftp|http|https):\\/\\/[^ \"]+$/)],\r\n            itemUid: [itemUid]\r\n        })\r\n    }\r\n\r\n    get items() {\r\n        return this.wishlistForm.get('items') as FormArray;\r\n    }\r\n\r\n    addItem(itemName = \"\", itemUrl = \"\", itemUid = \"\") {\r\n        \r\n        this.items.push(this.createItemFields(itemName, itemUrl, itemUid));\r\n        if (this.sub) {\r\n            this.sub.unsubscribe();\r\n        }\r\n        this.addEmpyRow();\r\n    }\r\n\r\n    submitData() {\r\n        this.db.setWishList(this.exchangeId, this.currentUser.id, this.wishlistForm.value.items);\r\n        this.setSavedMsg('Your wishlist has been saved!');\r\n        this.isDirty = false;\r\n        if (!this.currentUser.wishlistCreated) {\r\n            this.currentUser.wishlistCreated = true;\r\n            this.db.addExchangeesToExchange( this.exchangeId, this.currentUser );\r\n        }\r\n        //this.route.navigate(['/exchange/J56O1pNNIMY2QX5tvBtI/p4Ffw5TIgdMo8AbmPad5/wishlist/edit/wishlistSaved']);\r\n    }\r\n\r\n    setSavedMsg(txt = \"\") {\r\n        this.savedMsg = txt;\r\n        if (this.savedMsg && this.savedMsg != '') {\r\n            setTimeout(() => {\r\n                this.savedMsg = null;\r\n            }, 12000);\r\n        }\r\n    }\r\n\r\n    remove(i) {\r\n        const itemUid = this.items.controls[i].get('itemUid').value;\r\n        // remove from db\r\n        if (itemUid && itemUid != '') {\r\n            this.db.removeWishlistItem(this.exchangeId, this.currentUser.id, itemUid);\r\n        }\r\n        // remove from form\r\n        this.items.removeAt(i);\r\n    }\r\n\r\n    checkForBlank() {\r\n        var blanks = false;\r\n        this.items.controls.forEach(control => {\r\n            if (control.value === \"\") {\r\n                blanks = true;\r\n            }\r\n        });\r\n        if (!blanks) {\r\n            this.addItem();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        //console.log(this.items)\r\n    }\r\n\r\n    watchForm() {\r\n        var sub = this.wishlistForm.statusChanges.subscribe(val => {\r\n            this.isDirty = true;\r\n            sub.unsubscribe();\r\n        });\r\n    }\r\n\r\n    addEmpyRow(): void {\r\n        var total = this.items.controls.length\r\n        for (const item in this.items.controls) {\r\n            var num = parseInt(item, 10);\r\n            if ((1 + num) == total) {\r\n                var form = this.items.controls[item].get('itemName');\r\n                this.sub = form.valueChanges.subscribe(val => {\r\n                    if (form.dirty) {\r\n                        this.addItem()\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<!-- Example row of columns -->\\r\\n<div id=\\\"home\\\" class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-center mt-3\\\">\\r\\n    <div class=\\\"col text-center\\\">\\r\\n      <p>\\r\\n        The Great Gift Exchange based in the USA, and will never give away your\\r\\n        info!\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row align-items-center my-5\\\">\\r\\n    <div class=\\\"col-12 col-xl-5 offset-xl-1 col-lg-5 offset-lg-0 col-md-7 mt-3\\\">\\r\\n      <h2 class=\\\"pr-xl-7 mr-xl-7\\\">Create a gift exchange and draw names!</h2>\\r\\n      <p>\\r\\n        The Great Exchange makes it easy to setup your secret santa gift\\r\\n        exchange.\\r\\n      </p>\\r\\n      <ul>\\r\\n        <li>Names are drawn randomly</li>\\r\\n        <li>No one gets their own name</li>\\r\\n        <li>You can exclude people from drawing certian people</li>\\r\\n        <li>We’ll email everyone for you so everything stays a secret</li>\\r\\n        <li>It's free!</li>\\r\\n      </ul>\\r\\n      <button class=\\\"btn btn-md btn-primary mt-4\\\" (click)=\\\"buttonClick()\\\">\\r\\n        Create Your Exchange Now &raquo;\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-xl-5 offset-xl-0 col-lg-6 offset-lg-1 col-md-5 pl-lg-8 px-sm-5 my-5 align-self-center text-lg-right text-center\\\">\\r\\n      <img src=\\\"../assets/images/teal_giftbox.svg\\\" class=\\\"img-fluid\\\" style=\\\"max-width:350px;\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-5 pt-4 justify-content-center\\\">\\r\\n    <div class=\\\"col col-10 text-center mt-3 pt-5 border-top\\\">\\r\\n      <h3>Already a part of an exchange?</h3>\\r\\n      <p>\\r\\n        Check your email for a link to login to your exchange.<br />\\r\\n        <a [routerLink]=\\\"['/sendLoginEmail']\\\">Or, click here to send a new email!</a>\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Angulartics2Module, Angulartics2 } from \"angulartics2\";\r\n\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.scss\"]\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(private router: Router, private angulartics2: Angulartics2) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  buttonClick() {\r\n    // this.router.navigate(['setup/step1']);\r\n    // console.log('click')\r\n    this.angulartics2.eventTrack.next({ \r\n      action: 'click',\r\n      properties: { \r\n        category: 'setup'\r\n      },\r\n    });\r\n    this.router.navigate(['/setup/step1']);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">&nbsp;</div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <h3>Exchanges</h3>\\r\\n      <ul>\\r\\n        <li class=\\\"text\\\" *ngFor=\\\"let exchange of exchanges|async\\\">\\r\\n          <a [routerLink]=\\\"[ '/exchange', exchange.id, exchange.adminUid ]\\\">\\r\\n            {{exchange.name}}\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <h3>Users</h3>\\r\\n      <ul>\\r\\n        <li class=\\\"text\\\" *ngFor=\\\"let user of users | async\\\">\\r\\n          <a (click)=\\\"getUser(user.email)\\\">{{user.name}} - {{user.email}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xpc3QtZXhjaGFuZ2VzL2xpc3QtZXhjaGFuZ2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { DbServiceService } from \"../../services/db-service.service\";\r\nimport { FirestoreService } from \"src/app/services/firestore.service\";\r\nimport { User } from \"src/app/models/user.model\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-list-exchanges\",\r\n  templateUrl: \"./list-exchanges.component.html\",\r\n  styleUrls: [\"./list-exchanges.component.scss\"]\r\n})\r\nexport class ListExchangesComponent implements OnInit {\r\n  public exchanges;\r\n  public users;\r\n  public userDoc;\r\n  public user: User;\r\n\r\n  constructor(\r\n    private _dbservice: DbServiceService,\r\n    private fs: FirestoreService,\r\n    private router: Router\r\n  ) {\r\n    this.exchanges = this._dbservice.getExchanges();\r\n    this.users = this._dbservice.users;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getUser(id) {\r\n    this._dbservice.getUser(id).subscribe(user => {\r\n      this.user = user as User;\r\n      // console.log(this.user.id);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container my-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-lg-10 justify-content-md-center\\\">\\r\\n      <h1>Retreieve Your Email</h1>\\r\\n      <p><a [routerLink]=\\\"['/']\\\">&laquo; Go back</a></p>\\r\\n      <p>Enter the email address you used for the exchange and we will send you a new login link.</p>\\r\\n      <p *ngIf=\\\"savedMsg\\\" [class.text-success]=\\\"savedMsgPass\\\" [class.text-warning]=\\\"!savedMsgPass\\\" class=\\\"font-weight-bold\\\">{{\\r\\n        savedMsg }}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-lg-8 justify-content-md-center\\\">\\r\\n      <form class=\\\"col-6\\\" [formGroup]=\\\"emailForm\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"email\\\" [class.is-invalid]=\\\"emailForm.get('email').invalid && emailForm.get('email').touched\\\"\\r\\n            class=\\\"form-control\\\" placeholder=\\\"Your Email Address\\\" formControlName=\\\"email\\\">\\r\\n          <small class=\\\"text-warning\\\" *ngIf=\\\"emailForm.get('email').invalid && emailForm.get('email').touched\\\">*required\\r\\n            and must be formatted correctly</small>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"emailForm.invalid && emailForm.touched\\\" class=\\\"btn btn-success\\\">Send Email</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NlbmQtbG9naW4tZW1haWwvc2VuZC1sb2dpbi1lbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { SetupService } from \"src/app/services/setup.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { DbServiceService } from \"src/app/services/db-service.service\";\r\n\r\n@Component({\r\n  selector: \"app-send-login-email\",\r\n  templateUrl: \"./send-login-email.component.html\",\r\n  styleUrls: [\"./send-login-email.component.scss\"]\r\n})\r\nexport class SendLoginEmailComponent implements OnInit {\r\n  public emailForm: FormGroup;\r\n  public savedMsg: string;\r\n  public savedMsgPass: boolean;\r\n\r\n  constructor(\r\n    private _setupService: SetupService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private db: DbServiceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.emailForm = this.fb.group({\r\n      email: [\"\", [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  submitData() {\r\n    const email = this.emailForm.get('email').value;;\r\n    // console.log(email);\r\n    this.db.getUserOnce(email).then(user => {\r\n      if (user) {\r\n        // console.log(user.exchanges);\r\n        this.db.userRequestedEmail(email);\r\n        this.setSavedMsg(`An email has been sent to ${email}!`, true);\r\n      } else {\r\n        this.setSavedMsg('Email address was not found', false);\r\n      }\r\n    });\r\n  }\r\n\r\n  setSavedMsg(txt = \"\", pass: boolean) {\r\n    this.savedMsg = txt;\r\n    this.savedMsgPass = pass;\r\n    if (this.savedMsg && this.savedMsg != \"\") {\r\n      setTimeout(() => {\r\n        this.savedMsg = null;\r\n        this.savedMsgPass = null;\r\n      }, 12000);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">&nbsp;</div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-md-center\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2>Thank You!</h2>\\r\\n      <h4 *ngIf=\\\"savedMsg\\\" [class.text-success]=\\\"savedMsgPass\\\" [class.text-warning]=\\\"!savedMsgPass\\\" class=\\\"font-weight-bold\\\">\\r\\n        {{ savedMsg }}\\r\\n\\t\\t\\t</h4>\\r\\n      <p>Please verify your email address. An email has been sent to {{ formData.adminEmail }} with a link to verify.\\r\\n        Please complete this step, once verified we will notify everyone in your exchange.</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL2ZpbmFsLXN0ZXAvZmluYWwtc3RlcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SetupService } from \"../../../services/setup.service\";\r\nimport { FormBuilder, FormArray, FormGroup, Validator } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-final-step\",\r\n  templateUrl: \"./final-step.component.html\",\r\n  styleUrls: [\"./final-step.component.scss\"]\r\n})\r\nexport class FinalStepComponent implements OnInit {\r\n  private sent: boolean;\r\n  public savedMsg: string;\r\n  public savedMsgPass: boolean;\r\n\r\n  constructor(\r\n    private _setupService: SetupService,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  public formData = this._setupService.getData();\r\n\r\n  ngOnInit() {\r\n    if (!this.sent) {\r\n      this.send();\r\n      this.sent = true;\r\n    }\r\n  }\r\n\r\n  setSavedMsg(txt, pass: boolean) {\r\n    this.savedMsg = txt;\r\n    this.savedMsgPass = pass;\r\n    if (this.savedMsg && this.savedMsg != \"\") {\r\n      setTimeout(() => {\r\n        this.savedMsg = null;\r\n        this.savedMsgPass = null;\r\n      \r\n        this.router.navigate([\"/\"]);\r\n      \r\n      }, 12000);\r\n    }\r\n  }\r\n\r\n  async send() {\r\n    await this._setupService.sendSetupToFirestore().then(passed => {\r\n      if (passed) {\r\n        this.setSavedMsg(\"You will be redirected back to the home page in 12 seconds.\", true);\r\n      } else {\r\n        this.setSavedMsg(\"There was a problem creating your exchange. You will be returned to the starting page.\", false);\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3NldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-setup',\r\n  templateUrl: './setup.component.html',\r\n  styleUrls: ['./setup.component.scss']\r\n})\r\nexport class SetupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">&nbsp;</div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <h3>Instructions</h3>\\r\\n      <ul>\\r\\n        <li>Give your exchange a name</li>\\r\\n        <li>Set a date for your exchange</li>\\r\\n        <li>Set a max dollar amount people should spend</li>\\r\\n        <li>Throw your own name in the hat?</li>\\r\\n        <li>Do you want to see who drew who's name?</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <form #setup1form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <h4><label for=\\\"exchangeName\\\">Name Your Gift Exchange</label></h4>\\r\\n          <input required minlength=\\\"4\\\" [class.is-invalid]=\\\"name.invalid && name.dirty\\\" #name='ngModel' type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"exchangeName\\\" name=\\\"exchangeName\\\" placeholder=\\\"Exchange Name\\\" [(ngModel)]=\\\"formData.name\\\">\\r\\n          <small class=\\\"text-warning\\\" *ngIf=\\\"name.invalid && name.dirty\\\">*Exchange Must have a name greater than 3 characters</small>\\r\\n        </div>\\r\\n        <h4 for=\\\"datePicker\\\">Date of Exchange</h4>\\r\\n        <div class=\\\"form-inline form-group\\\">\\r\\n          <!-- <ngb-datepicker #d></ngb-datepicker> -->\\r\\n          <input required placeholder=\\\"year-m-d\\\" type=\\\"text\\\" #date='ngModel' class=\\\"form-control\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" name=\\\"datePicker\\\" [(ngModel)]=\\\"formData.date\\\" /><button class=\\\"btn btn-secondary btn-sm mx-2\\\" (click)=\\\"d.toggle()\\\" novalidate type=\\\"button\\\">Date Picker</button>\\r\\n          <div class=\\\"clearfix\\\"></div>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <h4><label for=\\\"exchangeBudget\\\">Max Budget Per Gift?</label></h4>\\r\\n          <input #budget='ngModel' type=\\\"text\\\" pattern=\\\"^[$]?[0-9,]+(\\\\.[0-9]{1,2})?$\\\" [class.is-invalid]=\\\"budget.invalid && budget.dirty\\\" class=\\\"form-control form-control-lg\\\" id=\\\"exchangeBudget\\\" name=\\\"exchangeBudget\\\" placeholder=\\\"Example $20\\\" [(ngModel)]=\\\"formData.budget\\\">\\r\\n          <small class=\\\"col-12 mt-2 pl-0 text-warning d-block\\\" *ngIf=\\\"budget.invalid && budget.dirty\\\">*Please use only numbers, $'s, commans and periods</small>\\r\\n        </div>\\r\\n        <!-- <h4>Each person draws # names?</h4>\\r\\n        <div class=\\\"form-check form-check-inline\\\">\\r\\n          <input class=\\\"form-check-input form-control-lg\\\" type=\\\"radio\\\" name=\\\"nameCountRadio\\\" id=\\\"draw1Name\\\" value=\\\"1\\\" [(ngModel)]=\\\"formData.nameCount\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"1\\\">1</label>\\r\\n        </div>\\r\\n        <div class=\\\"form-check form-check-inline\\\">\\r\\n          <input class=\\\"form-check-input form-control-lg\\\" type=\\\"radio\\\" name=\\\"nameCountRadio\\\" id=\\\"draw2Name\\\" value=\\\"2\\\" [(ngModel)]=\\\"formData.nameCount\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"inlineRadio2\\\">2</label>\\r\\n        </div>\\r\\n        <div class=\\\"form-check form-check-inline\\\">\\r\\n          <input class=\\\"form-check-input form-control-lg\\\" type=\\\"radio\\\" name=\\\"nameCountRadio\\\" id=\\\"draw0Name\\\" value=\\\"0\\\" [(ngModel)]=\\\"formData.nameCount\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"inlineRadio3\\\">Do not draw names</label>\\r\\n        </div> -->\\r\\n        <h4>Options</h4>\\r\\n        <div class=\\\"form-group form-check\\\">\\r\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input form-control-lg\\\" id=\\\"includeAdmin\\\" name=\\\"includeAdmin\\\" [(ngModel)]=\\\"formData.includeAdmin\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"includeAdmin\\\">Include My Name in Drawing</label>\\r\\n        </div>\\r\\n        <div class=\\\"form-group form-check\\\">\\r\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input form-control-lg\\\" id=\\\"showAdminNames\\\" name=\\\"showAdminNames\\\" [(ngModel)]=\\\"formData.showAdminNames\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"showAdminNames\\\">Show me who drew who</label>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button [disabled]=\\\"setup1form.form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3N0ZXAxL3N0ZXAxLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SetupService } from '../../../services/setup.service';\r\nimport { Angulartics2Module, Angulartics2 } from \"angulartics2\";\r\n\r\n@Component({\r\n\tselector: 'app-step1',\r\n\ttemplateUrl: './step1.component.html',\r\n\tstyleUrls: ['./step1.component.scss']\r\n})\r\nexport class Step1Component implements OnInit {\r\n\r\n\tconstructor(private _setupService: SetupService, private router: Router, private angulartics2: Angulartics2) { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tformData = this._setupService.getData();\r\n\r\n\tsubmitData() {\r\n\t\tthis._setupService.addData(this.formData);\r\n\t\tthis.angulartics2.eventTrack.next({ \r\n\t\t\taction: 'go to step 2',\r\n\t\t\tproperties: { \r\n\t\t\t  category: 'setup'\r\n\t\t\t},\r\n\t\t  });\r\n\t\tthis.router.navigate(['setup/step2']);\r\n\t}\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">&nbsp;</div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <h3>Add people to the gift exchange</h3>\\r\\n      <ul>\\r\\n        <li>Start with yourself, even if you are not in the exchange</li>\\r\\n        <li>Add name and email address for everyone else. Use your own email for people who can't get email (you'll receive their link)</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n      <form [formGroup]=\\\"step2Form\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\r\\n        <h3>Your Info</h3>\\r\\n        <div class=\\\"form-group has-feedback has-clear\\\">\\r\\n          <input type=\\\"text\\\" [class.is-invalid]=\\\"step2Form.get('adminName').invalid && step2Form.get('adminName').touched\\\" class=\\\"form-control\\\" placeholder=\\\"Your Name\\\" formControlName=\\\"adminName\\\">\\r\\n          <span class=\\\"form-control-clear glyphicon glyphicon-remove form-control-feedback hidden\\\"></span>\\r\\n          <small class=\\\"text-warning\\\" *ngIf=\\\"step2Form.get('adminName').invalid && step2Form.get('adminName').touched\\\">*required</small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"email\\\" [class.is-invalid]=\\\"step2Form.get('adminEmail').invalid && step2Form.get('adminEmail').touched\\\" class=\\\"form-control\\\" placeholder=\\\"Your Email Address\\\" formControlName=\\\"adminEmail\\\">\\r\\n          <small class=\\\"text-warning\\\" *ngIf=\\\"step2Form.get('adminEmail').invalid && step2Form.get('adminEmail').touched\\\">*required and must be formatted correctly</small>\\r\\n        </div>\\r\\n        <h3>Add Names</h3>\\r\\n        <div class=\\\"addNamesSection\\\">\\r\\n\\r\\n          <div formArrayName=\\\"exchangees\\\" *ngFor=\\\"let exchangee of step2Form.get('exchangees').controls; let i = index;\\\">\\r\\n          \\r\\n            <div class=\\\"form-row align-items-top\\\" [formGroupName]=\\\"i\\\">\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <input [class.is-invalid]=\\\"getExchangees().controls[i].get('name').invalid && getExchangees().controls[i].get('name').touched\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Exchangee's Name\\\" formControlName=\\\"name\\\">\\r\\n                <small *ngIf=\\\"getExchangees().controls[i].get('name').invalid && getExchangees().controls[i].get('name').touched\\\" class=\\\"text-warning\\\">*required</small>\\r\\n              </div>\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <input type=\\\"email\\\" [class.is-invalid]=\\\"getExchangees().controls[i].get('email').invalid && getExchangees().controls[i].get('email').touched\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n                <small *ngIf=\\\"getExchangees().controls[i].get('email').invalid && getExchangees().controls[i].get('email').touched\\\" class=\\\"text-warning\\\">*required and must be formatted correctly</small>\\r\\n              </div>\\r\\n              {{ (getExchangees().controls[i].get('email').Validators) | json }}\\r\\n            </div>\\r\\n          </div>\\r\\n          \\r\\n          <button type=\\\"button\\\" class=\\\"btn-secondary btn-sm my-3\\\" (click)=\\\"addNames()\\\">Add Names</button>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"back()\\\">Back</button>\\r\\n          <button type=\\\"submit\\\" [disabled]=\\\"step2Form.invalid\\\" class=\\\"btn btn-success  ml-2\\\">Next</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3N0ZXAyL3N0ZXAyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SetupService } from \"../../../services/setup.service\";\r\nimport { FormBuilder, FormArray, FormGroup, Validators } from \"@angular/forms\";\r\nimport { controlNameBinding } from \"@angular/forms/src/directives/reactive_directives/form_control_name\";\r\nimport { Angulartics2 } from \"angulartics2\";\r\n\r\n@Component({\r\n  selector: \"app-step2\",\r\n  templateUrl: \"./step2.component.html\",\r\n  styleUrls: [\"./step2.component.scss\"]\r\n})\r\nexport class Step2Component implements OnInit {\r\n  constructor(\r\n    private _setupService: SetupService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private angulartics2: Angulartics2\r\n  ) {}\r\n\r\n  public formData = this._setupService.getData();\r\n  public step2Form: FormGroup;\r\n\r\n  getExchangees() {\r\n    return this.step2Form.get(\"exchangees\") as FormArray;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.step2Form = this.fb.group({\r\n      adminName: [\r\n        this.formData.adminName,\r\n        [Validators.required, Validators.minLength(3)]\r\n      ],\r\n      adminEmail: [\r\n        this.formData.adminEmail,\r\n        [Validators.required, Validators.email]\r\n      ],\r\n      exchangees: this.fb.array([])\r\n    });\r\n\r\n    if (\r\n      this.formData.hasOwnProperty(\"exchangees\") &&\r\n      this.formData.exchangees.length > 0\r\n    ) {\r\n      this.formData.exchangees.forEach(ex => {\r\n        if (ex.name != \"\" && ex.email != \"\") {\r\n          this.addNames(ex.name, ex.email);\r\n        }\r\n      });\r\n    }\r\n    this.addNames();\r\n\r\n    this.getExchangees().valueChanges.subscribe(controls => {\r\n      for (let i = 0; i < controls.length; i++) {\r\n        const name = this.getExchangees().controls[i].get(\"name\");\r\n        const email = this.getExchangees().controls[i].get(\"email\");\r\n        if (name.value != \"\") {\r\n          email.setValidators([Validators.required, Validators.email]);\r\n        } else {\r\n          email.clearValidators();\r\n        }\r\n        if (email.value != \"\") {\r\n          name.setValidators(Validators.required);\r\n        } else {\r\n          name.clearValidators();\r\n        }\r\n        name.updateValueAndValidity({ emitEvent: false });\r\n        email.updateValueAndValidity({ emitEvent: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  createNameField(exName = \"\", exEmail = \"\"): FormGroup {\r\n    return this.fb.group({\r\n      name: [exName],\r\n      email: [exEmail, Validators.email]\r\n    });\r\n  }\r\n\r\n  get exchangees() {\r\n    return this.step2Form.get(\"exchangees\") as FormArray;\r\n  }\r\n\r\n  addNames(exName = \"\", exEmail = \"\") {\r\n    this.exchangees.push(this.createNameField(exName, exEmail));\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate([\"setup/step1\"]);\r\n  }\r\n\r\n  get getTempId() {\r\n    return Math.floor(Math.random() * 100000000 + 1);\r\n  }\r\n\r\n   hasDuplicates(array) {\r\n    var valuesSoFar = Object.create(null);\r\n    for (var i = 0; i < array.length; ++i) {\r\n      var value = array[i];\r\n      if (value in valuesSoFar) {\r\n        console.log(value);\r\n        array[i] = value + \" #2\";\r\n      }\r\n      valuesSoFar[value] = true;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  submitData() {\r\n    // prevent blanks, and long live exlcudes saved previously\r\n    var cleanedExs = [];\r\n    for (let i = 0; i < this.step2Form.value.exchangees.length; i++) {\r\n      const ex = this.step2Form.value.exchangees[i];\r\n      if (ex.name != \"\" && ex.email != \"\") {\r\n        if (this.formData.hasOwnProperty(\"exchangees\")) {\r\n          for (let l = 0; l < this.formData.exchangees.length; l++) {\r\n            const savedEx = this.formData.exchangees[l];\r\n            if (\r\n              savedEx.name === ex.name &&\r\n              savedEx.hasOwnProperty(\"excluded\")\r\n            ) {\r\n              ex.excluded = savedEx.excluded;\r\n            }\r\n          }\r\n        }\r\n        // ex.tempId = this.getTempId;\r\n        cleanedExs.push(ex);\r\n      }\r\n    }\r\n    // console.log(cleanedExs);\r\n    // add admin to exchangees if aplicable\r\n    if (this.formData.includeAdmin && !this.formData.adminAdded) {\r\n      cleanedExs.push({\r\n        name: this.step2Form.value.adminName,\r\n        email: this.step2Form.value.adminEmail,\r\n        isAdmin: true\r\n        // tempId: this.getTempId\r\n      });\r\n      this.formData.adminAdded = true;\r\n    }\r\n\r\n    this.step2Form.value.exchangees = cleanedExs;\r\n    this._setupService.addData(this.step2Form.value);\r\n    this.angulartics2.eventTrack.next({\r\n      action: \"go to step 3\",\r\n      properties: {\r\n        category: \"setup\"\r\n      }\r\n    });\r\n    this.router.navigate([\"setup/step3\"]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">&nbsp;</div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <h3>Exclude people from drawing certain names</h3>\\r\\n      <ul>\\r\\n        <li><p>\\r\\n          Example: If Joe and lisa are a couple and shouldnt draw eachothers names, first find joe and select Lisa's name from the drop down menu. Then find Lisa, and select Joe from the menu.\\r\\n        </p></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <form [formGroup]=\\\"step3Form\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\" formArrayName=\\\"exchangees\\\" *ngFor=\\\"let exchangee of formData.exchangees; let i = index\\\">\\r\\n              <p>\\r\\n              <strong>{{ exchangee.name }}</strong>\\r\\n              <br>\\r\\n              <small>{{ exchangee.email }}</small></p>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\" formControlName=\\\"exclude\\\" [formControlName]='i'>\\r\\n                  <option value=\\\"\\\" default>none</option>\\r\\n                  <!-- TODO: remove their own name from exclude list via pipe filter -->\\r\\n                  <option *ngFor=\\\"let ex of formData.exchangees; let l = index\\\" [value]=\\\"ex.name\\\">{{ ex.name }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"back()\\\">Back</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success ml-2\\\">Next</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3N0ZXAzL3N0ZXAzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SetupService } from \"../../../services/setup.service\";\r\nimport { FormBuilder, FormArray, FormGroup, Validator } from \"@angular/forms\";\r\nimport { Angulartics2 } from \"angulartics2\";\r\n\r\n@Component({\r\n  selector: \"app-step3\",\r\n  templateUrl: \"./step3.component.html\",\r\n  styleUrls: [\"./step3.component.scss\"]\r\n})\r\nexport class Step3Component implements OnInit {\r\n  constructor(\r\n    private _setupService: SetupService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private angulartics2: Angulartics2\r\n  ) {}\r\n\r\n  public formData = this._setupService.getData();\r\n\r\n  ngOnInit() {\r\n    if (\r\n      this.formData.hasOwnProperty(\"exchangees\") &&\r\n      this.formData.exchangees.length > 0\r\n    ) {\r\n      this.formData.exchangees.forEach(ex => {\r\n        if (ex.name != \"\" && ex.email != \"\") {\r\n          this.addField(ex.excluded);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  step3Form = this.fb.group({\r\n    exchangees: this.fb.array([])\r\n  });\r\n\r\n  get exchangees() {\r\n    return this.step3Form.get(\"exchangees\") as FormArray;\r\n  }\r\n\r\n  addField(selected = \"\") {\r\n    this.exchangees.push(this.fb.control(selected));\r\n  }\r\n\r\n  submitData() {\r\n    var exchangees = [];\r\n    for (let i = 0; i < this.formData.exchangees.length; i++) {\r\n      const savedEx = this.formData.exchangees[i];\r\n      const stepEx = this.step3Form.value.exchangees[i];\r\n      savedEx[\"excluded\"] = stepEx || \"\";\r\n      exchangees.push(savedEx);\r\n    }\r\n\r\n    const res = { exchangees: exchangees };\r\n\r\n    this._setupService.addData(res);\r\n    this.angulartics2.eventTrack.next({\r\n      action: \"go to step 4\",\r\n      properties: {\r\n        category: \"setup\"\r\n      }\r\n    });\r\n    this.router.navigate([\"setup/step4\"]);\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate([\"setup/step2\"]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">&nbsp;</div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <h3>Complete the setup by writing everyone a message</h3>\\r\\n      <ul>\\r\\n        <li>Welcome everyone to the gift exchange!</li>\\r\\n        <li>Submit it to save your exchange.</li>\\r\\n        <li>Next we'll email you to verify your email address is correct.</li>\\r\\n        <li>Once verified, we'll email everyone in your exchange with the names they drew!</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <form [formGroup]=\\\"step4Form\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"exampleFormControlTextarea1\\\">Email Welcome Message</label>\\r\\n          <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"5\\\" formControlName=\\\"welcomeMessage\\\"></textarea>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"back()\\\">Back</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success ml-2\\\">Finish and Verify Your Email Address</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3N0ZXA0L3N0ZXA0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SetupService } from '../../../services/setup.service';\r\nimport { FormBuilder, FormArray, FormGroup, Validator } from '@angular/forms';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\n@Component({\r\n  selector: 'app-step4',\r\n  templateUrl: './step4.component.html',\r\n  styleUrls: ['./step4.component.scss']\r\n})\r\nexport class Step4Component implements OnInit {\r\n\r\n  constructor(\r\n    private _setupService: SetupService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private angulartics2: Angulartics2\r\n  ) { }\r\n\r\n  public formData = this._setupService.getData();\r\n  \r\n  step4Form = this.fb.group({\r\n    welcomeMessage: [this.formData.welcomeMessage],\r\n  });\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['setup/step3']);\r\n  }\r\n\r\n  submitData() {\r\n    this._setupService.addData(this.step4Form.value);\r\n    this.angulartics2.eventTrack.next({ \r\n\t\t\taction: 'go to step 4',\r\n\t\t\tproperties: { \r\n\t\t\t  category: 'setup'\r\n\t\t\t},\r\n\t\t  });\r\n    this.router.navigate(['setup/finalize']);\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument,\r\n  AngularFirestoreCollection\r\n} from \"@angular/fire/firestore\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { FirestoreService } from \"./firestore.service\";\r\nimport { Exchange } from \"../models/exchange.model\";\r\nimport { User } from \"../models/user.model\";\r\nimport { WishlistItem } from \"../models/wishlist.model\";\r\nimport \"rxjs/add/operator/take\";\r\nimport { firestore } from \"firebase\";\r\n\r\n@Injectable()\r\nexport class DbServiceService {\r\n  exchangesCollection: AngularFirestoreCollection<Exchange>;\r\n  WishlistCollection: AngularFirestoreCollection<WishlistItem>;\r\n  WishlistDoc: AngularFirestoreDocument<WishlistItem>;\r\n  PeopleCollection: AngularFirestoreCollection<User>;\r\n  exchanges: Observable<Exchange[]>;\r\n  exDoc: AngularFirestoreDocument<Exchange>;\r\n  ex: Observable<Exchange>;\r\n  usersCollection: AngularFirestoreCollection<User>;\r\n  users: Observable<User[]>;\r\n  usersDoc: AngularFirestoreDocument<User>;\r\n  user: Observable<User>;\r\n  exchCollection: AngularFirestoreCollection<User>;\r\n  exchs: Observable<User[]>;\r\n  exchDoc: AngularFirestoreDocument<User>;\r\n  exch: Observable<User>;\r\n\r\n  constructor(public afs: AngularFirestore, public db: FirestoreService) {\r\n    //this.exchanges = this.afs.collection('exchanges').valueChanges();\r\n\r\n    this.exchangesCollection = this.afs.collection(\"exchanges\", ref =>\r\n      ref.orderBy(\"name\", \"asc\")\r\n    );\r\n\r\n    this.exchanges = this.exchangesCollection.snapshotChanges().map(changes => {\r\n      return changes.map(a => {\r\n        const data = a.payload.doc.data() as Exchange;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n      });\r\n    });\r\n\r\n    this.usersCollection = this.afs.collection(\"users\", ref =>\r\n      ref.orderBy(\"name\", \"asc\")\r\n    );\r\n    this.users = this.usersCollection.snapshotChanges().map(changes => {\r\n      return changes.map(a => {\r\n        const data = a.payload.doc.data() as User;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n      });\r\n    });\r\n  }\r\n\r\n  getExchanges() {\r\n    return this.db.colWithIds$(\"exchanges\");\r\n  }\r\n\r\n  getExchange(id): Observable<Exchange> {\r\n    return this.db.doc$(`exchanges/${id}`);\r\n  }\r\n\r\n  async addExchange(exchange: Exchange): Promise<string> {\r\n    const data = {\r\n      name: exchange.name,\r\n      date: exchange.date,\r\n      budget: exchange.budget,\r\n      // nameCount: exchange.nameCount,\r\n      includeAdmin: exchange.includeAdmin,\r\n      adminName: exchange.adminName,\r\n      adminEmail: exchange.adminEmail,\r\n      // adminUid: exchange.adminUid,\r\n      welcomeMessage: exchange.welcomeMessage || \"\"\r\n    };\r\n\r\n    // db.set('items/ID', data) })\r\n\r\n    // const docRef = await this.afs.collection('users').add(data);\r\n    const id = await this.afs.createId();\r\n    const docRef = await this.db.set(`exchanges/${id}`, data);\r\n    return id;\r\n  }\r\n\r\n  deleteExchange(exchange: Exchange) {\r\n    this.exDoc = this.afs.doc(`exchanges/${exchange.id}`);\r\n    this.exDoc.delete();\r\n  }\r\n\r\n  updateExchange(id, data) {\r\n    const exDoc = this.afs.doc(`exchanges/${id}`);\r\n    this.db.update(exDoc, data);\r\n  }\r\n\r\n  async createAdminUid(exId) {\r\n    const id = await this.afs.createId();\r\n    this.updateExchange(exId, {'adminUid': id})\r\n  }\r\n\r\n  async addExchangeesToExchange(exchangeId, data): Promise<any> {\r\n    const ref = this.afs\r\n      .collection<Exchange>(`exchanges`)\r\n      .doc(exchangeId)\r\n      .collection<User>(\"exchangees\");\r\n    return await this.db.upsertExchangeeUser(ref, data);\r\n  }\r\n\r\n  updateExchagee(exId, id, data) {\r\n    const exchDoc = this.afs\r\n      .collection<Exchange>(`exchanges`)\r\n      .doc(exId)\r\n      .collection<User>(\"exchangees\")\r\n      .doc(id);\r\n    return this.db.update(exchDoc, data);\r\n  }\r\n\r\n  getUsers() {\r\n    return this.users;\r\n  }\r\n\r\n  getUser(id): Observable<User> {\r\n    return this.db.docWithIds$(`users/${id}`);\r\n  }\r\n\r\n  getUserOnce(id) {\r\n    // return this.afs\r\n    //   .collection(\"users\")\r\n    //   .doc(id)\r\n    //   .valueChanges()\r\n    //   .take(1)\r\n    //   .toPromise()\r\n    //   .then((user: User) => user);\r\n    const ref = this.afs.collection(\"users\").doc(id);\r\n    return this.db.docWithIds$(ref).take(1)\r\n      .toPromise().then((user: User) => user);\r\n  }\r\n\r\n  getExchangeOnce(id) {\r\n    // return this.afs\r\n    //   .collection(\"users\")\r\n    //   .doc(id)\r\n    //   .valueChanges()\r\n    //   .take(1)\r\n    //   .toPromise()\r\n    //   .then((user: User) => user);\r\n    const ref = this.afs.collection(\"exchanges\").doc(id);\r\n    return this.db.docWithIds$(ref).take(1)\r\n      .toPromise().then((exchange: Exchange) => exchange);\r\n  }\r\n\r\n  getExchangee(exId, id): Observable<any> {\r\n    this.exchDoc = this.afs\r\n      .collection<Exchange>(`exchanges`)\r\n      .doc(exId)\r\n      .collection<User>(\"exchangees\")\r\n      .doc(id);\r\n    return this.db.docWithIds$(this.exchDoc);\r\n  }\r\n\r\n  getExchangePeople(exId): Observable<any> {\r\n    this.PeopleCollection = this.afs\r\n      .collection<Exchange>(`exchanges`)\r\n      .doc(exId)\r\n      .collection<User>(\"exchangees\");\r\n    return this.db.colWithIds$(this.PeopleCollection);\r\n  }\r\n\r\n  getExchangePeopleOnce(exId) {\r\n    this.PeopleCollection = this.afs\r\n      .collection<Exchange>(`exchanges`)\r\n      .doc(exId)\r\n      .collection<User>(\"exchangees\");\r\n    return this.db.colWithIds$(this.PeopleCollection).take(1)\r\n      .toPromise().then((people: [User]) => people);\r\n  }\r\n\r\n  getWishlist(exId, id): Observable<any> {\r\n    this.WishlistCollection = this.afs\r\n      .collection<Exchange>(`exchanges`)\r\n      .doc(exId)\r\n      .collection<User>(\"exchangees\")\r\n      .doc(id)\r\n      .collection(\"wishlist\", ref => ref.orderBy(\"createdAt\", \"asc\"));\r\n    return this.db.colWithIds$(this.WishlistCollection);\r\n  }\r\n\r\n  setWishList(exId, id, data: Array<any>): Promise<any> {\r\n    this.WishlistCollection = this.afs\r\n      .collection<Exchange>(`exchanges`)\r\n      .doc(exId)\r\n      .collection<User>(\"exchangees\")\r\n      .doc(id)\r\n      .collection(\"wishlist\");\r\n    data.forEach(async item => {\r\n      if (item.itemName != \"\") {\r\n        var cleanItem = { itemName: item.itemName };\r\n        if (item.itemUrl != \"\") {\r\n          cleanItem[\"itemUrl\"] = item.itemUrl;\r\n        }\r\n        if (item.itemUid != \"\") {\r\n          cleanItem[\"itemUid\"] = item.itemUid;\r\n        }\r\n        var itemUid = await this.db.upsertItem(\r\n          this.WishlistCollection,\r\n          cleanItem\r\n        );\r\n        item.itemUid = itemUid;\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  removeWishlistItem(exId, userId, uid) {\r\n    this.WishlistDoc = this.afs\r\n      .collection<Exchange>(`exchanges`)\r\n      .doc(exId)\r\n      .collection<User>(\"exchangees\")\r\n      .doc(userId)\r\n      .collection(\"wishlist\")\r\n      .doc(uid);\r\n    this.WishlistDoc.delete();\r\n  }\r\n\r\n  async addUser(user, exId = null): Promise<void> {\r\n    const data = {\r\n      name: user.name,\r\n      email: user.email\r\n    };\r\n\r\n    await this.db.upsertUser(`users/${data.email}`, data, true);\r\n    if (!!exId) {\r\n      this.addExchangeIdToUser(data.email, exId);\r\n    }\r\n  }\r\n\r\n  deleteUser(user: User) {\r\n    this.usersDoc = this.afs.doc(`users/${user.id}`);\r\n    this.usersDoc.delete();\r\n  }\r\n\r\n  updateUser(user: User) {\r\n    this.usersDoc = this.afs.doc(`users/${user.id}`);\r\n    this.usersDoc.update(user);\r\n  }\r\n\r\n  addExchangeIdToUser(userId, exchangeId) {\r\n    const ref = this.afs.collection(\"users\").doc(userId);\r\n    ref.update({ exchanges: firestore.FieldValue.arrayUnion(exchangeId) });\r\n  }\r\n\r\n  userRequestedEmail(userEmail): Promise<any> {\r\n    const ref = this.afs.collection(\"users\").doc(userEmail);\r\n    const stamp = this.db.timestamp;\r\n    // console.log(stamp);\r\n    return ref.update({ requestedEmail: this.db.timestamp });\r\n  }\r\n}\r\n","///// https://angularfirebase.com/lessons/firestore-advanced-usage-angularfire/#4-Upsert-Update-or-Create-Method\r\n///// https://angularfirebase.com/lessons/firestore-advanced-usage-angularfire/#4-Upsert-Update-or-Create-Method\r\n///// https://angularfirebase.com/lessons/firestore-advanced-usage-angularfire/#4-Upsert-Update-or-Create-Method\r\n///// https://angularfirebase.com/lessons/firestore-advanced-usage-angularfire/#4-Upsert-Update-or-Create-Method\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument,\r\n  AngularFirestoreCollection,\r\n  DocumentChangeAction,\r\n  Action,\r\n  DocumentSnapshotDoesNotExist,\r\n  DocumentSnapshotExists\r\n} from \"@angular/fire/firestore\";\r\nimport { Observable, from } from \"rxjs\";\r\nimport {\r\n  map,\r\n  tap,\r\n  take,\r\n  switchMap,\r\n  mergeMap,\r\n  expand,\r\n  takeWhile\r\n} from \"rxjs/operators\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\n\r\ntype CollectionPredicate<T> = string | AngularFirestoreCollection<T>;\r\ntype DocPredicate<T> = string | AngularFirestoreDocument<T>;\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class FirestoreService {\r\n  constructor(private afs: AngularFirestore) {}\r\n\r\n  /// **************\r\n  /// Get a Reference\r\n  /// **************\r\n\r\n  col<T>(ref: CollectionPredicate<T>, queryFn?): AngularFirestoreCollection<T> {\r\n    return typeof ref === \"string\" ? this.afs.collection<T>(ref, queryFn) : ref;\r\n  }\r\n\r\n  doc<T>(ref: DocPredicate<T>): AngularFirestoreDocument<T> {\r\n    return typeof ref === \"string\" ? this.afs.doc<T>(ref) : ref;\r\n  }\r\n\r\n  /// **************\r\n  /// Get Data\r\n  /// **************\r\n\r\n  doc$<T>(ref: DocPredicate<T>): Observable<T> {\r\n    return this.doc(ref)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(\r\n          (\r\n            doc: Action<\r\n              DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>\r\n            >\r\n          ) => {\r\n            const data = doc.payload.data();\r\n            return data as T;\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  docWithIds$<T>(ref: DocPredicate<T>): Observable<T> {\r\n    return this.doc(ref)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(\r\n          (\r\n            doc: Action<\r\n              DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>\r\n            >\r\n          ) => {\r\n            if (doc.payload.exists) {\r\n              const data = doc.payload.data();\r\n              data[\"id\"] = doc.payload.id;\r\n              return data as T;\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  col$<T>(ref: CollectionPredicate<T>, queryFn?): Observable<T[]> {\r\n    return this.col(ref, queryFn)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((docs: DocumentChangeAction<T>[]) => {\r\n          return docs.map((a: DocumentChangeAction<T>) =>\r\n            a.payload.doc.data()\r\n          ) as T[];\r\n        })\r\n      );\r\n  }\r\n\r\n  /// with Ids\r\n  colWithIds$<T>(ref: CollectionPredicate<T>, queryFn?): Observable<any[]> {\r\n    return this.col(ref, queryFn)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((actions: DocumentChangeAction<T>[]) => {\r\n          return actions.map((a: DocumentChangeAction<T>) => {\r\n            const data: Object = a.payload.doc.data() as T;\r\n            const id = a.payload.doc.id;\r\n            return { id, ...data };\r\n          });\r\n        })\r\n      );\r\n  }\r\n\r\n  /// **************\r\n  /// Write Data\r\n  /// **************\r\n\r\n  // *** Usage\r\n\r\n  // db.update('items/ID', data) }) // adds updatedAt field\r\n  // db.set('items/ID', data) })    // adds createdAt field\r\n  // db.add('items', data) })       // adds createdAt field\r\n\r\n  /// Firebase Server Timestamp\r\n  get timestamp() {\r\n    return firebase.firestore.FieldValue.serverTimestamp();\r\n  }\r\n\r\n  set<T>(ref: DocPredicate<T>, data: any): Promise<void> {\r\n    const timestamp = this.timestamp;\r\n    return this.doc(ref).set({\r\n      ...data,\r\n      updatedAt: timestamp,\r\n      createdAt: timestamp\r\n    });\r\n  }\r\n\r\n  update<T>(ref: DocPredicate<T>, data: any): Promise<void> {\r\n    return this.doc(ref).update({\r\n      ...data,\r\n      updatedAt: this.timestamp\r\n    });\r\n  }\r\n\r\n  delete<T>(ref: DocPredicate<T>): Promise<void> {\r\n    return this.doc(ref).delete();\r\n  }\r\n\r\n  add<T>(\r\n    ref: CollectionPredicate<T>,\r\n    data\r\n  ): Promise<firebase.firestore.DocumentReference> {\r\n    const timestamp = this.timestamp;\r\n    return this.col(ref).add({\r\n      ...data,\r\n      updatedAt: timestamp,\r\n      createdAt: timestamp\r\n    });\r\n  }\r\n\r\n  geopoint(lat: number, lng: number): firebase.firestore.GeoPoint {\r\n    return new firebase.firestore.GeoPoint(lat, lng);\r\n  }\r\n\r\n  /// If doc exists update, otherwise set\r\n  upsertUser<T>(ref: DocPredicate<T>, data: any, update = true): Promise<void> {\r\n    const doc = this.doc(ref)\r\n      .snapshotChanges()\r\n      .pipe(take(1))\r\n      .toPromise();\r\n\r\n    return doc.then(\r\n      (\r\n        snap: Action<DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>>\r\n      ) => {\r\n        return snap.payload.exists\r\n          ? update\r\n            ? this.update(ref, data)\r\n            : null\r\n          : this.set(ref, data);\r\n      }\r\n    );\r\n  }\r\n\r\n  upsertExchangeeUser<T>(\r\n    ref: CollectionPredicate<any>,\r\n    data: any\r\n  ): Promise<void> {\r\n    const uid = data.id ? data.id : this.afs.createId();\r\n    const doc = this.col(ref)\r\n      .doc(uid)\r\n      .snapshotChanges()\r\n      .pipe(take(1))\r\n      .toPromise();\r\n\r\n    return doc.then(\r\n      (\r\n        snap: Action<DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>>\r\n      ) => {\r\n        snap.payload.exists\r\n          ? this.update(this.col(ref).doc(uid), data)\r\n          : this.set(this.col(ref).doc(uid), data);\r\n        return uid;\r\n      }\r\n    );\r\n  }\r\n\r\n  upsertItem<T>(\r\n    ref: CollectionPredicate<T>,\r\n    data: any,\r\n    update = true\r\n  ): Promise<void> {\r\n    if (!data.hasOwnProperty(\"itemUid\")) {\r\n      const itemUid = this.afs.createId();\r\n      data[\"itemUid\"] = itemUid;\r\n      return this.set(this.col(ref).doc(data.itemUid), data);\r\n    } else {\r\n      return update ? this.update(this.col(ref).doc(data.itemUid), data) : null;\r\n    }\r\n  }\r\n\r\n  /// **************\r\n  /// Inspect Data\r\n  /// **************\r\n\r\n  inspectDoc(ref: DocPredicate<any>): void {\r\n    const tick = new Date().getTime();\r\n    this.doc(ref)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        take(1),\r\n        tap(\r\n          (\r\n            d: Action<\r\n              DocumentSnapshotDoesNotExist | DocumentSnapshotExists<any>\r\n            >\r\n          ) => {\r\n            const tock = new Date().getTime() - tick;\r\n            // console.log(`Loaded Document in ${tock}ms`, d);\r\n          }\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  inspectCol(ref: CollectionPredicate<any>): void {\r\n    const tick = new Date().getTime();\r\n    this.col(ref)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        take(1),\r\n        tap((c: DocumentChangeAction<any>[]) => {\r\n          const tock = new Date().getTime() - tick;\r\n          // console.log(`Loaded Collection in ${tock}ms`, c);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  /// **************\r\n  /// Create and read doc references\r\n  /// **************\r\n\r\n  /// create a reference between two documents\r\n  connect(host: DocPredicate<any>, key: string, doc: DocPredicate<any>) {\r\n    return this.doc(host).update({ [key]: this.doc(doc).ref });\r\n  }\r\n\r\n  /// returns a documents references mapped to AngularFirestoreDocument\r\n  docWithRefs$<T>(ref: DocPredicate<T>) {\r\n    return this.doc$(ref).pipe(\r\n      map((doc: T) => {\r\n        for (const k of Object.keys(doc)) {\r\n          if (doc[k] instanceof firebase.firestore.DocumentReference) {\r\n            doc[k] = this.doc(doc[k].path);\r\n          }\r\n        }\r\n        return doc;\r\n      })\r\n    );\r\n  }\r\n\r\n  /// **************\r\n  /// Atomic batch example\r\n  /// **************\r\n\r\n  /// Just an example, you will need to customize this method.\r\n  atomic() {\r\n    const batch = firebase.firestore().batch();\r\n    /// add your operations here\r\n\r\n    const itemDoc = firebase.firestore().doc(\"items/myCoolItem\");\r\n    const userDoc = firebase.firestore().doc(\"users/userId\");\r\n\r\n    const currentTime = this.timestamp;\r\n\r\n    batch.update(itemDoc, { timestamp: currentTime });\r\n    batch.update(userDoc, { timestamp: currentTime });\r\n\r\n    /// commit operations\r\n    return batch.commit();\r\n  }\r\n\r\n  /**\r\n   * Delete a collection, in batches of batchSize. Note that this does\r\n   * not recursively delete subcollections of documents in the collection\r\n   * from: https://github.com/AngularFirebase/80-delete-firestore-collections/blob/master/src/app/firestore.service.ts\r\n   */\r\n  deleteCollection(path: string, batchSize: number): Observable<any> {\r\n    const source = this.deleteBatch(path, batchSize);\r\n\r\n    // expand will call deleteBatch recursively until the collection is deleted\r\n    return source.pipe(\r\n      expand(val => this.deleteBatch(path, batchSize)),\r\n      takeWhile(val => val > 0)\r\n    );\r\n  }\r\n\r\n  // Detetes documents as batched transaction\r\n  private deleteBatch(path: string, batchSize: number): Observable<any> {\r\n    const colRef = this.afs.collection(path, ref =>\r\n      ref.orderBy(\"__name__\").limit(batchSize)\r\n    );\r\n\r\n    return colRef.snapshotChanges().pipe(\r\n      take(1),\r\n      mergeMap((snapshot: DocumentChangeAction<{}>[]) => {\r\n        // Delete documents in a batch\r\n        const batch = this.afs.firestore.batch();\r\n        snapshot.forEach(doc => {\r\n          batch.delete(doc.payload.doc.ref);\r\n        });\r\n\r\n        return from(batch.commit()).pipe(map(() => snapshot.length));\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Title, Meta } from \"@angular/platform-browser\";\r\nimport { Router, NavigationEnd, ActivatedRoute } from \"@angular/router\";\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class SEOService {\r\n  constructor(\r\n    private router: Router, \r\n    private activatedRoute: ActivatedRoute,\r\n    private titleService: Title,\r\n    private metaService: Meta,\r\n  ) {}\r\n  \r\n  public addSeoData(): void {\r\n    this.router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n  ).subscribe(() => {\r\n        var root = this.router.routerState.snapshot.root;\r\n        while (root) {\r\n          if (root.children && root.children.length) {\r\n            root = root.children[0];\r\n          } else if (root.data && root.data[\"title\"]) {\r\n            this.titleService.setTitle(root.data[\"title\"] + \" | The Great Gift Exchange\");\r\n            let tags = root.data[\"metatags\"];\r\n            for (let tag in tags) {\r\n              this.metaService.addTag({ name: tag, content: tags[tag] });\r\n            }\r\n            return;\r\n          } else {\r\n            return;\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { DbServiceService } from \"../services/db-service.service\";\r\nimport { User } from \"../models/user.model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class SetupService {\r\n  private setupData;\r\n\r\n  constructor(private db: DbServiceService) {\r\n    this.setupData = {\r\n      // adminame: \"Jacob Heisterkamp\",\r\n      // adminEmail: \"jmheist@gmail.com\",\r\n      // exchangees: [\r\n      //   {\r\n      //     name: \"stacey\",\r\n      //     email: \"stacey@email.com\",\r\n      //     excluded: \"dave\",\r\n      //   },\r\n      //   {\r\n      //     name: \"dave\",\r\n      //     email: \"dave@email.com\",\r\n      //     excluded: \"\",\r\n      //   },\r\n      //   {\r\n      //     name: \"deb\",\r\n      //     email: \"deb@email.com\",\r\n      //     excluded: \"Jacob Heisterkamp\",\r\n      //   },\r\n      //   {\r\n      //     name: \"grant\",\r\n      //     email: \"grant@email.com\",\r\n      //     excluded: \"\",\r\n      //   },\r\n      //   {\r\n      //     name: \"kristin\",\r\n      //     email: \"kristin@email.com\",\r\n      //     excluded: \"\",\r\n      //   }\r\n      // ],\r\n      // name: \"Best Heisterkamp Family Exchange\",\r\n      // date: { year: 2018, month: 11, day: 15 },\r\n      // budget: \"20\",\r\n      // nameCount: \"1\",\r\n      // includeAdmin: true,\r\n      // welcomeMessage: \"Hello Everyone!\",\r\n      // adminName: \"Jacob Heisterkamp\"\r\n    };\r\n  }\r\n\r\n  addData(data) {\r\n    if (data) {\r\n      for (let key in data) {\r\n        this.setupData[key] = data[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  async createExchange() {\r\n    let exchangees = {};\r\n    let adminSet = false;\r\n    // console.log(\"createExchange(): Starting\");\r\n    this.setupData.uid = await this.db.addExchange(this.setupData);\r\n    const properties = Object.keys(this.setupData.exchangees);\r\n    for (const prop of properties) {\r\n      await this.db\r\n        .addExchangeesToExchange(\r\n          this.setupData.uid,\r\n          this.setupData.exchangees[prop]\r\n        )\r\n        .then(async exId => {\r\n          if (this.setupData.exchangees[prop].isAdmin) {\r\n            await this.db.updateExchange(this.setupData.uid, {\r\n              adminUid: exId\r\n            });\r\n            adminSet = await true;\r\n            // console.log(adminSet);\r\n          }\r\n          exchangees[exId] = await this.setupData.exchangees[prop];\r\n        });\r\n    }\r\n    await this.addDrawnIds(exchangees);\r\n    // add adminUid to exchange\r\n    // console.log(adminSet);\r\n    if (!adminSet) {\r\n      await this.db.createAdminUid(this.setupData.uid);\r\n    }\r\n    // console.log(\"createExchange(): Finished\");\r\n  }\r\n\r\n  async addDrawnIds(exchangees) {\r\n    console.log(\"addDrawnIds(): Starting\");\r\n    const properties = Object.keys(exchangees);\r\n    for (const id of properties) {\r\n      let ex = exchangees[id];\r\n\r\n      for (const drawnId of properties) {\r\n        let exDrawn = exchangees[drawnId];\r\n        if (ex.nameDrawn === exDrawn.name) {\r\n          ex.drawnUid = drawnId;\r\n        }\r\n      }\r\n\r\n      if (!!ex.drawnUid) {\r\n        await this.db.updateExchagee(this.setupData.uid, id, ex);\r\n      }\r\n    }\r\n    console.log(\"addDrawnIds(): Finished\");\r\n    return;\r\n  }\r\n\r\n  async addUsers() {\r\n    // console.log(\"addUsers(): Started\");\r\n    // add admin if not included\r\n    if (!this.setupData.includeAdmin) {\r\n      const admin = {\r\n        name: this.setupData.adminName,\r\n        email: this.setupData.adminEmail\r\n      };\r\n      // console.log(`adding ${admin.name}`)\r\n      await this.db.addUser(admin, this.setupData.uid);\r\n    }\r\n    const properties = Object.keys(this.setupData.exchangees);\r\n    for (const prop of properties) {\r\n      var user = this.setupData.exchangees[prop];\r\n      // console.log(`adding ${user.name}`)\r\n      await this.db.addUser(user, this.setupData.uid);\r\n    }\r\n    // console.log(\"addUsers(): Completed\");\r\n  }\r\n  async checkData() {\r\n    let goodData = true;\r\n    const list = [\r\n      \"name\",\r\n      \"date\",\r\n      \"budget\",\r\n      \"exchangees\",\r\n      \"adminName\",\r\n      \"adminEmail\"\r\n    ];\r\n    for (const atrib of list) {\r\n      if (!this.setupData.hasOwnProperty(atrib)) {\r\n        goodData = false;\r\n      }\r\n    }\r\n    return goodData;\r\n  }\r\n\r\n  async sendSetupToFirestore(): Promise<boolean> {\r\n    const passed = await this.checkData();\r\n    if (passed) {\r\n      await this.drawNames();\r\n      await this.createExchange();\r\n      await this.addUsers();\r\n      return this.finish();\r\n    } else {\r\n      // console.log('the data was bad.')\r\n      return false;\r\n    }\r\n  }\r\n\r\n  finish() {\r\n    this.setupData = {};\r\n    // console.log('im done');\r\n    return true;\r\n  }\r\n\r\n  printData() {\r\n    // console.log(this.setupData ? this.setupData : \"no data in this.setupData\");\r\n  }\r\n\r\n  getData() {\r\n    return this.setupData;\r\n  }\r\n\r\n  async drawNames(prod = true) {\r\n    let errors = false;\r\n    let people = [];\r\n    if (prod) {\r\n      people = this.setupData.exchangees;\r\n    } else {\r\n      people = Object.assign([], this.setupData.exchangees);\r\n    }\r\n    const verifyGiftPartners = people =>\r\n      people.every(person => person.nameDrawn);\r\n    const setNameDrawnToBlank = people =>\r\n      people.forEach(person => (person.nameDrawn = \"\"));\r\n\r\n    //Knuth shuffle\r\n    const shuffleArray = array => {\r\n      for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n    };\r\n\r\n    const assignGiftPartners = function(people) {\r\n      var peopleLeftToAssign = people.map(person => person.name);\r\n      console.log(peopleLeftToAssign);\r\n      people.forEach(function(person) {\r\n        var choices = peopleLeftToAssign.filter(function(personToAssign) {\r\n          return (\r\n            personToAssign != person.name && personToAssign != person.excluded\r\n            // person.past.indexOf(personToAssign) === -1\r\n          );\r\n        });\r\n        if (choices.length > 1) {\r\n          shuffleArray(choices);\r\n        }\r\n        if (choices.length === 0) {\r\n        } else {\r\n          console.log(choices);\r\n          person.nameDrawn = choices[0];\r\n          var index = peopleLeftToAssign.indexOf(choices[0]);\r\n          peopleLeftToAssign.splice(index, 1);\r\n        }\r\n      });\r\n    };\r\n\r\n    function dedupe(people) {\r\n      people.forEach(p => {\r\n        var counter = 1\r\n        var count = people.reduce(function (n, person) {\r\n          return n + (person.name == p.name);\r\n        }, 0);\r\n        if (count > 1) {\r\n          p.name = p.name + \" \" + counter;\r\n          counter++;\r\n        }\r\n      });\r\n    }\r\n\r\n    let allAssigned = false;\r\n    let loopCount = 0;\r\n\r\n    dedupe(people);\r\n\r\n    while (!allAssigned) {\r\n      loopCount++;\r\n      assignGiftPartners(people);\r\n      allAssigned = verifyGiftPartners(people);\r\n      //exit loop if going too long\r\n      if (loopCount > 50) {\r\n        console.log(\"Something went wrong with the assignment\");\r\n        errors = true;\r\n        break;\r\n      }\r\n      if (!allAssigned) {\r\n        setNameDrawnToBlank(people);\r\n      }\r\n    }\r\n\r\n    //save choices into database\r\n    if (errors) {\r\n      console.log(\"there were errors while drawing names\");\r\n    } else {\r\n      console.log(people);\r\n    }\r\n    console.log(\"names drawn\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user.model';\r\nimport { DbServiceService } from './db-service.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  public emailToUpdateId: string;\r\n  private activeUserId: string;\r\n  public currentUser: User;\r\n\r\n  constructor(\r\n    private db: DbServiceService\r\n    ) {}\r\n\r\n  setActiveUserId(id) {\r\n    this.activeUserId = id;\r\n  }\r\n  \r\n  getActiveUserId() {\r\n    return this.activeUserId;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container mt-8 pt-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col text-center\\\">\\r\\n      <p>&copy;Straylight Designs</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div id=\\\"header\\\" class=\\\"container-fluid py-4 mt-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col text-center\\\">\\r\\n        <a [routerLink]=\\\"['/']\\\"><img id=\\\"logo\\\" src=\\\"../assets/images/logo_outlines.svg\\\" class=\\\"img-fluid\\\"></a>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 text-right\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!-- admin nav bar  -->\\r\\n<!-- <nav class=\\\"navbar navbar-expand-md navbar-dark static-top bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{ title }}</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/step1\\\" routerLinkActive=\\\"active\\\">Step 1</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/step2\\\" routerLinkActive=\\\"active\\\">Step 2</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/step3\\\" routerLinkActive=\\\"active\\\">Step 3</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/step4\\\" routerLinkActive=\\\"active\\\">Step 4</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/finalize\\\" routerLinkActive=\\\"active\\\">finalize</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/list-all\\\" routerLinkActive=\\\"active\\\">list-all</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlL25hdi9uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  title: string = 'Gift Exchange';\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n  \tapiKey: \"AIzaSyCcA6KyePSLIA3WvXVRjMYke_6PasHpVvk\",\r\n    authDomain: \"giftexchange-572f3.firebaseapp.com\",\r\n    databaseURL: \"https://giftexchange-572f3.firebaseio.com\",\r\n    projectId: \"giftexchange-572f3\",\r\n    storageBucket: \"giftexchange-572f3.appspot.com\",\r\n    messagingSenderId: \"184436074227\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}