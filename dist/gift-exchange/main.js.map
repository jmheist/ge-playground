{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pages/bad-link/bad-link.component.html","webpack:///./src/app/pages/bad-link/bad-link.component.scss","webpack:///./src/app/pages/bad-link/bad-link.component.ts","webpack:///./src/app/pages/exchange-lookup/exchange-lookup.component.html","webpack:///./src/app/pages/exchange-lookup/exchange-lookup.component.scss","webpack:///./src/app/pages/exchange-lookup/exchange-lookup.component.ts","webpack:///./src/app/pages/exchange/exchange-view/exchange-view.component.html","webpack:///./src/app/pages/exchange/exchange-view/exchange-view.component.scss","webpack:///./src/app/pages/exchange/exchange-view/exchange-view.component.ts","webpack:///./src/app/pages/exchange/exchange-view/update-email/update-email.component.html","webpack:///./src/app/pages/exchange/exchange-view/update-email/update-email.component.scss","webpack:///./src/app/pages/exchange/exchange-view/update-email/update-email.component.ts","webpack:///./src/app/pages/exchange/exchange.component.html","webpack:///./src/app/pages/exchange/exchange.component.scss","webpack:///./src/app/pages/exchange/exchange.component.ts","webpack:///./src/app/pages/exchange/group/group.component.html","webpack:///./src/app/pages/exchange/group/group.component.scss","webpack:///./src/app/pages/exchange/group/group.component.ts","webpack:///./src/app/pages/exchange/verify-email/verify-email.component.html","webpack:///./src/app/pages/exchange/verify-email/verify-email.component.scss","webpack:///./src/app/pages/exchange/verify-email/verify-email.component.ts","webpack:///./src/app/pages/exchange/wishlist-home/draw/draw.component.html","webpack:///./src/app/pages/exchange/wishlist-home/draw/draw.component.scss","webpack:///./src/app/pages/exchange/wishlist-home/draw/draw.component.ts","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-home.component.html","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-home.component.scss","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-home.component.ts","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component.html","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component.scss","webpack:///./src/app/pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component.ts","webpack:///./src/app/pages/exchange/wishlist-home/wishlist/wishlist.component.html","webpack:///./src/app/pages/exchange/wishlist-home/wishlist/wishlist.component.scss","webpack:///./src/app/pages/exchange/wishlist-home/wishlist/wishlist.component.ts","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.scss","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/list-exchanges/list-exchanges.component.html","webpack:///./src/app/pages/list-exchanges/list-exchanges.component.scss","webpack:///./src/app/pages/list-exchanges/list-exchanges.component.ts","webpack:///./src/app/pages/send-login-email/send-login-email.component.html","webpack:///./src/app/pages/send-login-email/send-login-email.component.scss","webpack:///./src/app/pages/send-login-email/send-login-email.component.ts","webpack:///./src/app/pages/setup/final-step/final-step.component.html","webpack:///./src/app/pages/setup/final-step/final-step.component.scss","webpack:///./src/app/pages/setup/final-step/final-step.component.ts","webpack:///./src/app/pages/setup/setup.component.html","webpack:///./src/app/pages/setup/setup.component.scss","webpack:///./src/app/pages/setup/setup.component.ts","webpack:///./src/app/pages/setup/step1/step1.component.html","webpack:///./src/app/pages/setup/step1/step1.component.scss","webpack:///./src/app/pages/setup/step1/step1.component.ts","webpack:///./src/app/pages/setup/step2/step2.component.html","webpack:///./src/app/pages/setup/step2/step2.component.scss","webpack:///./src/app/pages/setup/step2/step2.component.ts","webpack:///./src/app/pages/setup/step3/step3.component.html","webpack:///./src/app/pages/setup/step3/step3.component.scss","webpack:///./src/app/pages/setup/step3/step3.component.ts","webpack:///./src/app/pages/setup/step4/step4.component.html","webpack:///./src/app/pages/setup/step4/step4.component.scss","webpack:///./src/app/pages/setup/step4/step4.component.ts","webpack:///./src/app/services/db-service.service.ts","webpack:///./src/app/services/firestore.service.ts","webpack:///./src/app/services/seo.service.ts","webpack:///./src/app/services/setup.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/template/footer/footer.component.html","webpack:///./src/app/template/footer/footer.component.scss","webpack:///./src/app/template/footer/footer.component.ts","webpack:///./src/app/template/nav/nav.component.html","webpack:///./src/app/template/nav/nav.component.scss","webpack:///./src/app/template/nav/nav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { HomeComponent } from \"./pages/home/home.component\";\nimport { SetupComponent } from \"./pages/setup/setup.component\";\nimport { Step1Component } from \"./pages/setup/step1/step1.component\";\nimport { Step2Component } from \"./pages/setup/step2/step2.component\";\nimport { Step3Component } from \"./pages/setup/step3/step3.component\";\nimport { Step4Component } from \"./pages/setup/step4/step4.component\";\nimport { FinalStepComponent } from \"./pages/setup/final-step/final-step.component\";\nimport { ListExchangesComponent } from \"./pages/list-exchanges/list-exchanges.component\";\n// import { AdminComponent } from './pages/admin/admin.component';\n// import { ExchangeAdminComponent } from './pages/admin/exchange-admin/exchange-admin.component';\n// import { UpdateEmailComponent } from './pages/admin/update-email/update-email.component';\nimport { ExchangeComponent } from \"./pages/exchange/exchange.component\";\nimport { WishlistComponent } from \"./pages/exchange/wishlist-home/wishlist/wishlist.component\";\nimport { DrawComponent } from \"./pages/exchange/wishlist-home/draw/draw.component\";\nimport { WishlistSavedComponent } from \"./pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component\";\nimport { WishlistHomeComponent } from \"./pages/exchange/wishlist-home/wishlist-home.component\";\nimport { ExchangeViewComponent } from \"./pages/exchange/exchange-view/exchange-view.component\";\nimport { SendLoginEmailComponent } from \"./pages/send-login-email/send-login-email.component\";\nimport { UpdateEmailComponent } from \"./pages/exchange/exchange-view/update-email/update-email.component\";\nimport { VerifyEmailComponent } from \"./pages/exchange/verify-email/verify-email.component\";\nimport { ExchangeLookupComponent } from \"./pages/exchange-lookup/exchange-lookup.component\";\nimport { BadLinkComponent } from \"./pages/bad-link/bad-link.component\";\n\nconst desc = \"Create secret santa gift exchanges\";\nconst tags =\n  \"gift, giving, exchange, secret, santa, christmas, holidays, shopping, family, co-workers, friends\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent,\n    data: {\n      title: \"Secret Santa Gift Exchange Tool\",\n      metatags: {\n        description: desc,\n        keywords: tags\n      }\n    }\n  },\n  {\n    path: \"setup\",\n    component: SetupComponent,\n    data: {\n      title: \"Gift Exchange Setup\",\n      metatags: {\n        description: desc,\n        keywords: tags\n      }\n    },\n    children: [\n      { path: \"step1\", component: Step1Component },\n      { path: \"step2\", component: Step2Component },\n      { path: \"step3\", component: Step3Component },\n      { path: \"step4\", component: Step4Component },\n      { path: \"finalize\", component: FinalStepComponent }\n    ]\n  },\n  {\n    path: \"exchange/:exchangeId/:curentUserId\",\n    component: ExchangeComponent,\n    data: {\n      title: \"Your Gift Exchange\",\n      metatags: {\n        description: desc,\n        keywords: tags\n      }\n    },\n    children: [\n      { path: \"\", component: ExchangeViewComponent },\n      { path: \"verify\", component: VerifyEmailComponent },\n      { path: \"update-email/:uidToUpdate\", component: UpdateEmailComponent },\n      {\n        path: \"wishlist\",\n        component: WishlistHomeComponent,\n        children: [\n          { path: \"edit\", component: WishlistComponent },\n          { path: \"edit/wishlistSaved\", component: WishlistSavedComponent },\n          { path: \"drawn\", component: DrawComponent }\n        ]\n      }\n    ]\n  },\n  {\n    path: \"exchange-lookup/:userEmail\",\n    component: ExchangeLookupComponent,\n    data: {\n      title: \"Your Exchanges\",\n      metatags: {\n        description: desc,\n        keywords: tags\n      }\n    }\n  },\n  {\n    path: \"sendLoginEmail\",\n    component: SendLoginEmailComponent,\n    data: {\n      title: \"Send a new login email\",\n      metatags: {\n        description: desc,\n        keywords: tags\n      }\n    }\n  },\n  {\n    path: \"list-all\",\n    component: ListExchangesComponent,\n    data: {\n      title: \"See all exchanges\",\n      metatags: {\n        description: desc,\n        keywords: tags\n      }\n    }\n  },\n  { path: \"**\", component: BadLinkComponent, data: {\n\ttitle: \"Page not found\",\n\tmetatags: {\n\t  description: desc,\n\t  keywords: tags\n\t}\n  } }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<app-nav></app-nav>\\n<main role=\\\"main\\\">\\n    <router-outlet></router-outlet>\\n    <app-footer></app-footer>\\n</main>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from \"@angular/core\";\nimport { Angulartics2GoogleAnalytics } from \"angulartics2/ga\";\nimport { SEOService } from \"./services/seo.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  constructor(\n    angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics,\n    private seoService: SEOService\n  ) {\n    angulartics2GoogleAnalytics.startTracking();\n    this.seoService.addSeoData();\n  }\n  title = \"gift-exchange\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AdsenseModule } from 'ng2-adsense';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './template/nav/nav.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { FooterComponent } from './template/footer/footer.component';\nimport { Step2Component } from './pages/setup/step2/step2.component';\nimport { Step3Component } from './pages/setup/step3/step3.component';\nimport { Step1Component } from './pages/setup/step1/step1.component';\nimport { Step4Component } from './pages/setup/step4/step4.component';\nimport { FinalStepComponent } from './pages/setup/final-step/final-step.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\nimport { ListExchangesComponent } from './pages/list-exchanges/list-exchanges.component';\n\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\n\nimport { DbServiceService } from './services/db-service.service';\nimport { SetupService } from './services/setup.service';\nimport { SetupComponent } from './pages/setup/setup.component';\n// import { AdminComponent } from './pages/admin/admin.component';\n// import { ExchangeAdminComponent } from './pages/admin/exchange-admin/exchange-admin.component';\nimport { WishlistComponent } from './pages/exchange/wishlist-home/wishlist/wishlist.component';\n// import { UpdateEmailComponent } from './pages/admin/update-email/update-email.component';\nimport { ExchangeComponent } from './pages/exchange/exchange.component';\nimport { DrawComponent } from './pages/exchange/wishlist-home/draw/draw.component';\nimport { GroupComponent } from './pages/exchange/group/group.component';\nimport { WishlistSavedComponent } from './pages/exchange/wishlist-home/wishlist-saved/wishlist-saved.component';\nimport { WishlistHomeComponent } from './pages/exchange/wishlist-home/wishlist-home.component';\nimport { FirestoreService } from './services/firestore.service';\nimport { ExchangeViewComponent } from './pages/exchange/exchange-view/exchange-view.component';\nimport { SendLoginEmailComponent } from './pages/send-login-email/send-login-email.component';\nimport { UpdateEmailComponent } from './pages/exchange/exchange-view/update-email/update-email.component';\nimport { VerifyEmailComponent } from './pages/exchange/verify-email/verify-email.component';\nimport { ExchangeLookupComponent } from './pages/exchange-lookup/exchange-lookup.component';\nimport { BadLinkComponent } from './pages/bad-link/bad-link.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    FooterComponent,\n    Step2Component,\n    Step3Component,\n    Step1Component,\n    Step4Component,\n    FinalStepComponent,\n    ListExchangesComponent,\n    SetupComponent,\n    // AdminComponent,\n    // ExchangeAdminComponent,\n    WishlistComponent,\n    // UpdateEmailComponent,\n    ExchangeComponent,\n    DrawComponent,\n    GroupComponent,\n    WishlistSavedComponent,\n    WishlistHomeComponent,\n    ExchangeViewComponent,\n    SendLoginEmailComponent,\n    UpdateEmailComponent,\n    VerifyEmailComponent,\n    ExchangeLookupComponent,\n    BadLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase), // imports firebase/app needed for everything\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n    AngularFireStorageModule, // imports firebase/storage only needed for storage features\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Angulartics2Module.forRoot({\n      pageTracking: {\n        clearIds: true,\n      }\n    }),\n    AdsenseModule.forRoot({\n      adClient: 'ca-pub-8196182321788212',\n      // adSlot: 7259870550,\n    }),\n  ],\n  providers: [\n    DbServiceService,\n    SetupService,\n    FirestoreService,\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<p>\\n  bad-link works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JhZC1saW5rL2JhZC1saW5rLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-bad-link',\n  templateUrl: './bad-link.component.html',\n  styleUrls: ['./bad-link.component.scss']\n})\nexport class BadLinkComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.router.navigate([''])\n  }\n\n}\n","module.exports = \"<div class=\\\"container my-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1>Hi {{(user)?.name}}</h1>\\n      <p>Email: {{(user)?.email}}</p>\\n      <p>Here is a list of the exchanges you belong to for this email address.</p>\\n      <ul>\\n        <li *ngFor=\\\"let exchange of (exchanges)\\\"><a [routerLink]=\\\"['/exchange', exchange.id, exchange.userId]\\\">{{exchange.name}}</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlLWxvb2t1cC9leGNoYW5nZS1sb29rdXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { User } from \"src/app/models/user.model\";\nimport { DbServiceService } from \"src/app/services/db-service.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-exchange-lookup\",\n  templateUrl: \"./exchange-lookup.component.html\",\n  styleUrls: [\"./exchange-lookup.component.scss\"]\n})\nexport class ExchangeLookupComponent implements OnInit {\n  public user: User;\n  public userExchanges: [];\n  public exchanges = [];\n  private userEmail: \"\";\n\n  constructor(\n    private db: DbServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.route.params.subscribe(async params => {\n      this.userEmail = params[\"userEmail\"];\n    });\n    this.db.getUserOnce(this.userEmail).then(async user => {\n      this.user = user;\n      this.userExchanges = this.user.exchanges;\n      for (let ex of this.userExchanges) {\n        const exData = await this.getExchangeInfo(ex, this.userEmail);\n        await this.exchanges.push({\n          id: ex,\n          name: exData.name,\n          userId: exData.userId\n        });\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  async getExchangeInfo(exId, userEmail): Promise<any> {\n    let exData = {};\n    return this.db.getExchangeOnce(exId).then(async exchange => {\n      exData[\"name\"] = exchange.name;\n      if ((userEmail = exchange.adminEmail)) {\n        exData[\"userId\"] = await exchange.adminUid;\n      } else {\n        await this.db.getExchangePeopleOnce(exId).then(async people => {\n          for (let person in people) {\n            if (people[person].email == userEmail) {\n              exData[\"userId\"] = people[person].id;\n            }\n          }\n        });\n      }\n      return exData;\n    });\n  }\n}\n","module.exports = \"<div class=\\\"row mb-5\\\">\\n  <div class=\\\"col text-center\\\">\\n    <h3>{{ (exchange | async)?.name }}</h3>\\n  </div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-sm-8\\\">\\n    <h4>Welcome {{ currentUser?.name.capitalize() }} <small *ngIf=\\\"isAdmin\\\">  (Admin) </small></h4>\\n    <ul *ngIf=\\\"participant\\\">\\n      <li *ngIf=\\\"currentUser && participant\\\">\\n        <a [routerLink]=\\\"['/exchange', exchangeId, (currentUser)?.id, 'wishlist', 'edit']\\\">\\n          {{ !currentUser?.wishlistCreated ? \\\"Create your wishlist\\\" : \\\"Update your wish list\\\" }}\\n        </a>\\n      </li>\\n      <li>\\n        <a (click)=\\\"updateUsersEmail()\\\">Change your email address</a>\\n      </li>\\n    </ul>\\n    <h4 class=\\\"text-success\\\">You drew {{currentUser?.nameDrawn.capitalize()}}'s name!</h4>\\n    <ul *ngIf=\\\"participant\\\">\\n      <li *ngIf=\\\"currentUser && participant\\\"><a [routerLink]=\\\"['/exchange', exchangeId, (currentUser)?.id, 'wishlist', 'drawn']\\\">View\\n          {{currentUser?.nameDrawn.capitalize()}}'s wishlist</a></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-sm-4\\\">\\n    <h5>Settings</h5>\\n    <ul>\\n      <li>Budget: ${{ (exchange | async)?.budget }}</li>\\n      <li>Date: {{ (exchange | async)?.date.month }}/{{ (exchange | async)?.date.day }}/{{ (exchange |\\n        async)?.date.year }}</li>\\n      <li *ngIf=\\\"isAdmin && includeAdmin\\\">I'm Included: Yes</li>\\n      <li>Admin Sees Names: {{ showAdminNames }}</li>\\n      <!-- <li># of Names Per Person: {{ (exchange | async)?.nameCount }}</li> -->\\n    </ul>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h3>People</h3>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"mt-2 mb-2 pt-2 pb-2 border-bottom\\\" *ngFor=\\\"let ex of (people | async) ; let i of index;\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <h4><span (click)=\\\"loadExchangeAs(ex.id)\\\">{{ex.name.capitalize()}}</span></h4>\\n          </div>\\n          <div class=\\\"col col-sm-4\\\">\\n            <span *ngIf=\\\"isAdmin && showAdminNames == 'Yes'\\\">Name drawn: {{ex.nameDrawn.capitalize()}}</span>\\n          </div>\\n          <div class=\\\"col-sm-4\\\" *ngIf=\\\"isAdmin\\\">\\n            Their Wishlist:&nbsp;\\n            <span class='text-success' *ngIf=\\\"ex.wishlistCreated\\\">Wishlist Set</span>\\n            <span class='text-danger' *ngIf=\\\"!ex.wishlistCreated\\\"><strong>Wishlist Not Set</strong></span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">{{ ex.email }} <small *ngIf=\\\"isAdmin\\\">(<a (click)=\\\"updateUsersEmail(ex.id)\\\">edit</a>)</small></div>\\n          <div class=\\\"col-sm-4 offset-md-4\\\" *ngIf=\\\"isAdmin\\\">\\n            Viewed Their Name's Wishlist:&nbsp;\\n            <span *ngIf=\\\"ex.viewedDrawnWishlist\\\" class='text-success'>Yes</span>\\n            <span *ngIf=\\\"!ex.viewedDrawnWishlist\\\" class='text-danger'><strong>No</strong></span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL2V4Y2hhbmdlLXZpZXcvZXhjaGFuZ2Utdmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DbServiceService } from \"../../../services/db-service.service\";\nimport { Observable } from \"rxjs\";\nimport { Exchange } from \"../../../models/exchange.model\";\nimport { User } from \"src/app/models/user.model\";\nimport { UserService } from \"src/app/services/user.service\";\n\n@Component({\n  selector: \"app-exchange-view\",\n  templateUrl: \"./exchange-view.component.html\",\n  styleUrls: [\"./exchange-view.component.scss\"]\n})\nexport class ExchangeViewComponent implements OnInit {\n  public exchange: Observable<Exchange>;\n  public people: Observable<any>;\n  public currentUser: User;\n  public isAdmin: boolean;\n  public showAdminNames: string;\n  public includeAdmin: boolean;\n  public participant: boolean;\n  private exchangeId: string;\n  private curentUserId: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private db: DbServiceService,\n    private userSrv: UserService\n  ) {}\n\n  async ngOnInit() {\n    await this.route.parent.params.subscribe(async params => {\n      this.exchangeId = params[\"exchangeId\"];\n      this.userSrv.setActiveUserId(params[\"curentUserId\"]);\n      this.curentUserId = this.userSrv.getActiveUserId();\n    });\n    await this.loadExchange();\n      await this.loadPeople();\n      await this.db\n        .getExchangee(this.exchangeId, this.curentUserId)\n        .subscribe(async user => {\n          if (user) {\n            this.currentUser = user;\n            this.isAdmin = this.currentUser.isAdmin || false;\n            this.participant = true;\n            this.exchange.subscribe(async exchange => {\n              this.showAdminNames = exchange.showAdminNames ? \"Yes\" : \"No\";\n              this.includeAdmin = exchange.includeAdmin;\n            });\n          } else {\n            this.exchange.subscribe(async exchange => {\n              if (\n                !exchange.includeAdmin &&\n                this.curentUserId === exchange.adminUid\n              ) {\n                this.showAdminNames = exchange.showAdminNames ? \"Yes\" : \"No\";\n                this.includeAdmin = exchange.includeAdmin;\n                this.currentUser = {\n                  name: exchange.adminName,\n                  uid: exchange.adminUid\n                };\n                this.isAdmin = true;\n                this.participant = false;\n              }\n            });\n          }\n        });\n  }\n\n  updateUsersEmail(userId = \"self\") {\n    this.userSrv.emailToUpdateId = userId;\n    this.router.navigate([\n      \"/exchange\",\n      this.exchangeId,\n      this.currentUser.id,\n      \"update-email\",\n      userId\n    ]);\n  }\n\n  async loadExchange() {\n    // load data from firestore for this exhange\n    this.exchange = await this.db.getExchange(this.exchangeId);\n  }\n\n  loadPeople() {\n    this.people = this.db.getExchangePeople(this.exchangeId);\n  }\n\n  loadExchangeAs(id) {\n    this.router.navigate([\"/exchange/\" + this.exchangeId + \"/\" + id]);\n  }\n\n  viewed(viewed: boolean) {\n    return viewed\n      ? \"<span class='text-success'>Yes</span>\"\n      : \"<span class='text-danger'>No</span>\";\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col col-lg-12 justify-content-md-center\\\">\\n    <h1>Update {{ (userToUpdate)?.name }}'s Email Address</h1>\\n    <p><a [routerLink]=\\\"['/exchange', exchangeId, curentUserId]\\\">&laquo; Go back to\\n        exchange. </a></p>\\n    <p *ngIf=\\\"savedMsg\\\" [class.text-success]=\\\"savedMsgPass\\\" [class.text-warning]=\\\"!savedMsgPass\\\" class=\\\"font-weight-bold\\\">\\n      {{ savedMsg }}\\n    </p>\\n    <h5>Current Email Adddress: {{ (userToUpdate)?.email }}</h5>\\n    <p>Just enter the new email address below and click save.</p>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col col-lg-8 justify-content-md-center\\\">\\n    <form class=\\\"col-6\\\" [formGroup]=\\\"emailForm\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"email\\\" [class.is-invalid]=\\\"emailForm.get('email').invalid && emailForm.get('email').touched\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Your Email Address\\\" formControlName=\\\"email\\\">\\n        <small class=\\\"text-warning\\\" *ngIf=\\\"emailForm.get('email').invalid && emailForm.get('email').touched\\\">*required\\n          and must be formatted correctly</small>\\n      </div>\\n      <button type=\\\"submit\\\" [disabled]=\\\"emailForm.invalid && emailForm.touched\\\" class=\\\"btn btn-success\\\">Save New Email\\n        Address</button>\\n    </form>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL2V4Y2hhbmdlLXZpZXcvdXBkYXRlLWVtYWlsL3VwZGF0ZS1lbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DbServiceService } from \"src/app//services/db-service.service\";\nimport { Observable } from \"rxjs\";\nimport { Exchange } from \"src/app//models/exchange.model\";\nimport { User } from \"src/app/models/user.model\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\nimport { SetupService } from \"src/app/services/setup.service\";\n\n@Component({\n  selector: \"app-update-email\",\n  templateUrl: \"./update-email.component.html\",\n  styleUrls: [\"./update-email.component.scss\"]\n})\nexport class UpdateEmailComponent implements OnInit {\n  public savedMsg: string;\n  public savedMsgPass: boolean;\n  public exchangeId: string;\n  public curentUserId: string;\n  public uidToUpdate: string;\n  public userToUpdate: any;\n  public emailForm: FormGroup;\n\n  public exchange: Observable<Exchange>;\n  public currentUser: User;\n  public isAdmin: boolean;\n\n  constructor(\n    private _setupService: SetupService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private db: DbServiceService,\n    private userSrv: UserService\n  ) {\n    this.route.parent.params.subscribe(async params => {\n      this.exchangeId = params[\"exchangeId\"];\n      this.curentUserId = params[\"curentUserId\"];\n      await this.route.params.subscribe(async params => {\n        this.uidToUpdate = params[\"uidToUpdate\"];\n      });\n      this.exchange = await this.db.getExchange(this.exchangeId);\n      await this.db\n        .getExchangee(this.exchangeId, this.curentUserId)\n        .subscribe(async user => {\n          if (user) {\n            this.currentUser = user;\n            this.isAdmin = this.currentUser.isAdmin || false;\n            this.exchange.subscribe(async exchange => {\n              // this.showAdminNames = exchange.showAdminNames ? \"Yes\" : \"No\";\n              // this.includeAdmin = exchange.includeAdmin;\n            });\n          } else {\n            this.exchange.subscribe(async exchange => {\n              if (\n                !exchange.includeAdmin &&\n                this.curentUserId === exchange.adminUid\n              ) {\n                this.currentUser = {\n                  name: exchange.adminName,\n                  uid: exchange.adminUid\n                };\n                this.isAdmin = true;\n              }\n            });\n          }\n          if (this.uidToUpdate != \"self\") {\n            await this.db\n              .getExchangee(this.exchangeId, this.uidToUpdate)\n              .subscribe(async user => {\n                this.userToUpdate = user;\n              });\n          } else {\n            this.userToUpdate = this.currentUser;\n          }\n        });\n    });\n  }\n\n  ngOnInit() {\n    this.emailForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.email]]\n    });\n  }\n\n  submitData() {\n    const newEmail = this.emailForm.get(\"email\").value;\n\n    if (this.uidToUpdate == \"self\") {\n      // update your own email address\n      this.db\n        .updateExchagee(this.exchangeId, this.currentUser.id, {\n          email: newEmail\n        })\n        .then(updatedUser => {\n          this.db.addUser(this.userToUpdate, this.exchangeId).then(data => {\n            // console.log(\"saved msg\");\n            this.setSavedMsg(\n              `${this.userToUpdate.name}'s Email Address Has Been Updated.`,\n              true\n            );\n          });\n        });\n    } else if (this.uidToUpdate && this.uidToUpdate != \"\") {\n      // update some one elses email address\n      if (this.isAdmin) {\n        this.db\n          .updateExchagee(this.exchangeId, this.uidToUpdate, {\n            email: newEmail\n          })\n          .then(updatedUser => {\n            this.db.addUser(this.userToUpdate, this.exchangeId).then(data => {\n              // console.log(\"saved msg\");\n              this.setSavedMsg(\n                `${this.userToUpdate.name}'s Email Address Has Been Updated.`,\n                true\n              );\n            });\n          });\n      } else {\n        // console.log(\"you are not an admin\");\n      }\n      this.setSavedMsg(`There was a problem.`, false);\n    }\n  }\n\n  setSavedMsg(txt, pass: boolean) {\n    this.savedMsg = txt;\n    this.savedMsgPass = pass;\n    if (this.savedMsg && this.savedMsg != \"\") {\n      setTimeout(() => {\n        this.savedMsg = null;\n        this.savedMsgPass = null;\n      }, 12000);\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container my-5\\\">\\n<router-outlet></router-outlet>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL2V4Y2hhbmdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exchange',\n  templateUrl: './exchange.component.html',\n  styleUrls: ['./exchange.component.scss']\n})\nexport class ExchangeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  group works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL2dyb3VwL2dyb3VwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.scss']\n})\nexport class GroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1>Thank you for verifying!</h1>\\n      <h3>Your gift exchange has started and we're letting everyone know right now!</h3>\\n      <p> <a [routerLink]=\\\"['/exchange', exchangeId, curentUserId]\\\">Click here to view your exchange.</a></p>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3ZlcmlmeS1lbWFpbC92ZXJpZnktZW1haWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DbServiceService } from \"../../../services/db-service.service\";\nimport { Observable } from \"rxjs\";\nimport { Exchange } from \"../../../models/exchange.model\";\nimport { User } from \"src/app/models/user.model\";\nimport { UserService } from \"src/app/services/user.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"./verify-email.component.html\",\n  styleUrls: [\"./verify-email.component.scss\"]\n})\nexport class VerifyEmailComponent implements OnInit {\n  public exchange: Observable<Exchange>;\n  public people: Observable<any>;\n  public currentUser: User;\n  public isAdmin: boolean;\n  public showAdminNames: string;\n  public includeAdmin: boolean;\n  public participant: boolean;\n  public exchangeId: string;\n  public curentUserId: string;\n\n  private exchangeDoc: Exchange;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private db: DbServiceService,\n    private userSrv: UserService\n  ) {\n    this.route.parent.params.subscribe(async params => {\n      this.exchangeId = params[\"exchangeId\"];\n      this.curentUserId = params[\"curentUserId\"];\n      this.exchange = await this.db.getExchange(this.exchangeId);\n      await this.db\n        .getExchangee(this.exchangeId, this.curentUserId)\n        .subscribe(async user => {\n          if (user) {\n            this.currentUser = user;\n            this.isAdmin = this.currentUser.isAdmin || false;\n            await this.exchange.subscribe(async exchange => {\n              this.exchangeDoc = exchange;\n              this.verify();\n            });\n          } else {\n            await this.exchange.subscribe(async exchange => {\n              this.exchangeDoc = exchange;\n              if (\n                this.curentUserId === exchange.adminUid\n              ) {\n                this.currentUser = {\n                  name: exchange.adminName,\n                  uid: exchange.adminUid\n                };\n                this.isAdmin = true;\n              }\n              this.verify();\n            });\n          }\n\n          \n        });\n    });\n  }\n\n  ngOnInit() {}\n\n  verify() {\n    if (\n      this.isAdmin &&\n      !this.exchangeDoc.hasOwnProperty(\"adminVerifiedEmail\")\n    ) {\n      // verify the exchange\n      this.db.updateExchange(this.exchangeId, {\n        adminVerifiedEmail: true\n      });\n    }\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <h2>{{(currentUser)?.nameDrawn.capitalize()}}'s Wishlist</h2>\\n        <p>\\n            <a [routerLink]=\\\"['/exchange', exchangeId, currentUserUid]\\\">&laquo; Go back to exchange.</a>\\n        </p>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-7 pl-4 pr-4\\\">\\n      <div *ngFor=\\\"let item of (wishlist|async)\\\" class=\\\"row border-bottom pt-1 pb-2 mb-2 mt-1\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          {{ item.itemName.capitalize() }}\\n        </div>\\n        <div class=\\\"col-sm-6 text-right\\\">\\n          <button class=\\\"btn btn-primary\\\" *ngIf=\\\"item.itemUrl\\\" (click)=\\\"openItemUrl(item)\\\">Open {{(currentUser)?.nameDrawn.capitalize()}}'s Link</button>\\n          <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!item.itemUrl\\\" (click)=\\\"openItemUrl(item)\\\">Search Amazon</button>\\n        </div>\\n      </div>\\n  </div>\\n  <div class=\\\"col-lg-5\\\">\\n    \\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3dpc2hsaXN0LWhvbWUvZHJhdy9kcmF3LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DbServiceService } from 'src/app/services/db-service.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/models/user.model';\n\n@Component({\n  selector: 'app-draw',\n  templateUrl: './draw.component.html',\n  styleUrls: ['./draw.component.scss']\n})\nexport class DrawComponent implements OnInit {\n\n  public wishlist: Observable<any>;\n  public wishlistSaved: [];\n  public exchange: {};\n  public currentUser: User;\n  public currentUserUid: string;\n  public exchangeId: string;\n  private exDoc;\n\n  constructor(\n    private router: ActivatedRoute,\n    private route: Router,\n    private db: DbServiceService,\n    private userSrv: UserService\n\n  ) {\n    this.router.parent.parent.params.subscribe(params => {\n      this.exchangeId = params['exchangeId'];\n      this.userSrv.setActiveUserId(params['curentUserId']);\n    });\n    this.db.getExchangee(this.exchangeId, this.userSrv.getActiveUserId()).subscribe(user => {\n      this.currentUser = user;\n      this.currentUserUid = this.currentUser.id;\n      this.wishlist = this.db.getWishlist(this.exchangeId, this.currentUser.drawnUid);\n      // var sub = this.wishlist.subscribe(items => { \n      //   console.log(items)\n      // });\n      if (!this.currentUser.viewedDrawnWishlist) {\n        this.currentUser.viewedDrawnWishlist = true;\n        this.db.addExchangeesToExchange( this.exchangeId, this.currentUser );\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  updateQueryStringParameter(uri, key, value) {\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n    if (uri.match(re)) {\n      return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n    }\n    else {\n      return uri + separator + key + \"=\" + value;\n    }\n  }\n\n  openItemUrl(item) {\n    if (item.itemUrl) {\n      if (item.itemUrl.match(/https?:\\/\\/(?=(?:....)?amazon|smile)(www|smile)\\S+com(((?:\\/(?:dp|gp)\\/([A-Z0-9]+))?\\S*[?&]?(?:tag=))?\\S*?)(?:#)?(\\w*?-\\w{2})?(\\S*)(#?\\S*)+/g)) {\n        item.itemUrl = this.updateQueryStringParameter(item.itemUrl, 'tag', 'jmheist-20');\n      }\n      window.open(item.itemUrl,'_blank');\n    } else {\n      const url = \"https://www.amazon.com/s/?field-keywords=\"+item.itemName.split(\" \").join(\"+\")+\"&tag=jmheist-20\"\n      window.open(url,'_blank');\n    }\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3dpc2hsaXN0LWhvbWUvd2lzaGxpc3QtaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wishlist-home',\n  templateUrl: './wishlist-home.component.html',\n  styleUrls: ['./wishlist-home.component.scss']\n})\nexport class WishlistHomeComponent implements OnInit {\n\n  constructor() {\n    // if the user is viewing their wishlist, take them to edit page\n    // otherwise, take them to the draw page where they see their name's wishlist\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <p>Your wishlist has been saved!</p>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3dpc2hsaXN0LWhvbWUvd2lzaGxpc3Qtc2F2ZWQvd2lzaGxpc3Qtc2F2ZWQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-wishlist-saved',\n  templateUrl: './wishlist-saved.component.html',\n  styleUrls: ['./wishlist-saved.component.scss']\n})\nexport class WishlistSavedComponent implements OnInit {\n  prevUrl;\n  constructor(\n    private router: Router,\n  ) {\n  }\n  ngOnInit() {\n  }\n\n  goBack() {\n    // console.log(this.prevUrl);\n    window.history.back()\n  }\n\n}\n","module.exports = \"<div class=\\\"row pb-4\\\">\\n    <div class=\\\"col col-lg-5\\\">\\n        <h2>Wishlist for {{ currentUser?.name }}</h2>\\n        <p>\\n            <a [class.disabled]=\\\"isDirty\\\" [routerLink]=\\\"['/exchange', exchangeId, currentUserUid]\\\">&laquo; Go back to exchange.  </a><span *ngIf=\\\"savedMsg\\\" class=\\\"text-success font-weight-bold\\\">{{ savedMsg }}</span>\\n        </p>\\n    </div>\\n    <div class=\\\"col col-lg-7 text-right align-self-end\\\">\\n        <p><small>Hint: You can add links to items from amazon and other sites!</small></p>\\n    </div>\\n</div>\\n<!-- <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n        <ul>\\n            <li *ngFor=\\\"let item of (wishlist|async)\\\">{{ item?.name }} --- {{ item?.uid }}</li>\\n        </ul>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n        <ul>\\n            <li *ngFor=\\\"let item of wishlistForm.get('items').value\\\">{{ item.name }} --- {{ item.uid }}</li>\\n        </ul>\\n    </div>\\n</div> -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <form [formGroup]=\\\"wishlistForm\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\n            <div formArrayName=\\\"items\\\" *ngFor=\\\"let item of wishlistForm.get('items').controls; let i = index; last as isLast;\\\"\\n                class=\\\"mb-3 pb-3 border-bottom\\\">\\n                <div class=\\\"\\\" [formGroupName]=\\\"i\\\">\\n                    <div class=\\\"row pb-1\\\">\\n                        <label for=\\\"itemName\\\" class=\\\"col-sm-2 col-form-label\\\">Wishlist Item</label>\\n                        <div class=\\\"col-sm-10 btn-group\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"itemName\\\" formControlName=\\\"itemName\\\"\\n                                placeholder=\\\"Enter your gift ideas here\\\">\\n                            <button type=\\\"button\\\" [class.d-none]=\\\"wishlistForm.get('items').controls[i].get('itemName').pristine && wishlistForm.get('items').controls[i].get('itemName').value == '' && isLast\\\"\\n                                class=\\\"close mx-1\\\" aria-label=\\\"Close\\\" (click)=\\\"remove(i)\\\">\\n                                <span class=\\\"text-primary\\\" aria-hidden=\\\"true\\\">&times;</span>\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <label for=\\\"itemUrl\\\" class=\\\"col-sm-2 col-form-label\\\">Item Link</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input [class.is-invalid]=\\\"wishlistForm.get('items').controls[i].get('itemUrl').invalid\\\" class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"itemUrl\\\" name=\\\"itemUrl\\\" placeholder=\\\"Optionally add a link to the item\\\">\\n                            <small class=\\\"text-warning\\\" *ngIf=\\\"wishlistForm.get('items').controls[i].get('itemUrl').invalid\\\">*url is not in correct format. </small> \\n                            <!-- && wishlistForm.get('items').controls[i].get('itemUrl').value.length > 0 -->\\n                        </div>\\n                    </div>\\n                    <input class=\\\"form-control\\\" type=\\\"hidden\\\" formControlName=\\\"itemUid\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"wishlistForm.invalid\\\">Save Wishlist</button>\\n                <!-- <button type=\\\"button\\\" class=\\\"btn-secondary btn-sm ml-2\\\" (click)=\\\"addItem()\\\">Add another Gift Idea</button> -->\\n            </div>\\n        </form>\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n        <!-- <h3>Hints</h3>\\n        <ul>\\n            <li>You can add links to gift ideas from sites like amazon!</li>\\n        </ul> -->\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <!-- <div class=\\\"col\\\">load me\\n        <script type=\\\"text/javascript\\\">\\n            amzn_assoc_placement = \\\"adunit0\\\";\\n            amzn_assoc_search_bar = \\\"false\\\";\\n            amzn_assoc_tracking_id = \\\"jmheist-20\\\";\\n            amzn_assoc_ad_mode = \\\"search\\\";\\n            amzn_assoc_ad_type = \\\"smart\\\";\\n            amzn_assoc_marketplace = \\\"amazon\\\";\\n            amzn_assoc_region = \\\"US\\\";\\n            amzn_assoc_title = \\\"Gift Ideas\\\";\\n            amzn_assoc_default_search_phrase = \\\"Gifts\\\"; //&low-price=&high-price=25\\n            amzn_assoc_default_low_price = \\\"0\\\";\\n            amzn_assoc_default_high_price = \\\"25\\\";\\n            amzn_assoc_default_category = \\\"All\\\";\\n            amzn_assoc_linkid = \\\"77b11a3f5b5059a6640e4a65c8cd2351\\\";\\n            </script>\\n            <script src=\\\"//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US\\\"></script>\\n    </div> -->\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V4Y2hhbmdlL3dpc2hsaXN0LWhvbWUvd2lzaGxpc3Qvd2lzaGxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subscribable } from 'rxjs';\nimport { User } from 'src/app/models/user.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DbServiceService } from 'src/app/services/db-service.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-wishlist',\n    templateUrl: './wishlist.component.html',\n    styleUrls: ['./wishlist.component.scss']\n})\nexport class WishlistComponent implements OnInit {\n\n    public wishlist: Observable<any>;\n    public wishlistSaved: [];\n    public exchange: {};\n    public currentUser: User;\n    public currentUserUid: string;\n    public savedMsg: string;\n    public isDirty = false;\n    public exchangeId: string;\n    private exDoc;\n    private sub = undefined;\n\n    constructor(\n        private router: ActivatedRoute,\n        private route: Router,\n        private db: DbServiceService,\n        private userSrv: UserService,\n        private fb: FormBuilder,\n\n    ) {\n        this.router.parent.parent.params.subscribe(params => {\n            this.exchangeId = params['exchangeId'];\n            this.userSrv.setActiveUserId(params['curentUserId']);\n        });\n        var exSub = this.db.getExchangee(this.exchangeId, this.userSrv.getActiveUserId()).subscribe(user => {\n            this.currentUser = user;\n            this.currentUserUid = this.currentUser.id;\n            this.wishlist = this.db.getWishlist(this.exchangeId, this.currentUser.id);\n            var sub = this.wishlist.subscribe(items => {\n                items.forEach(item => {\n                    this.addItem(item.itemName, item.itemUrl, item.itemUid)\n                });\n                sub.unsubscribe();\n                this.addItem() // add a blank\n                this.watchForm();\n            });\n            exSub.unsubscribe();\n        });\n    }\n\n    wishlistForm = this.fb.group({\n        items: this.fb.array([])\n    });\n\n    createItemFields(itemName = \"\", itemUrl = \"\", itemUid = \"\"): FormGroup {\n        const reg = \"\";\n        return this.fb.group({\n            itemName: [itemName],\n            itemUrl: [itemUrl, Validators.pattern(/^(ftp|http|https):\\/\\/[^ \"]+$/)],\n            itemUid: [itemUid]\n        })\n    }\n\n    get items() {\n        return this.wishlistForm.get('items') as FormArray;\n    }\n\n    addItem(itemName = \"\", itemUrl = \"\", itemUid = \"\") {\n        \n        this.items.push(this.createItemFields(itemName, itemUrl, itemUid));\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n        this.addEmpyRow();\n    }\n\n    submitData() {\n        this.db.setWishList(this.exchangeId, this.currentUser.id, this.wishlistForm.value.items);\n        this.setSavedMsg('Your wishlist has been saved!');\n        this.isDirty = false;\n        if (!this.currentUser.wishlistCreated) {\n            this.currentUser.wishlistCreated = true;\n            this.db.addExchangeesToExchange( this.exchangeId, this.currentUser );\n        }\n        //this.route.navigate(['/exchange/J56O1pNNIMY2QX5tvBtI/p4Ffw5TIgdMo8AbmPad5/wishlist/edit/wishlistSaved']);\n    }\n\n    setSavedMsg(txt = \"\") {\n        this.savedMsg = txt;\n        if (this.savedMsg && this.savedMsg != '') {\n            setTimeout(() => {\n                this.savedMsg = null;\n            }, 12000);\n        }\n    }\n\n    remove(i) {\n        const itemUid = this.items.controls[i].get('itemUid').value;\n        // remove from db\n        if (itemUid && itemUid != '') {\n            this.db.removeWishlistItem(this.exchangeId, this.currentUser.id, itemUid);\n        }\n        // remove from form\n        this.items.removeAt(i);\n    }\n\n    checkForBlank() {\n        var blanks = false;\n        this.items.controls.forEach(control => {\n            if (control.value === \"\") {\n                blanks = true;\n            }\n        });\n        if (!blanks) {\n            this.addItem();\n        }\n    }\n\n    ngOnInit() {\n        //console.log(this.items)\n    }\n\n    watchForm() {\n        var sub = this.wishlistForm.statusChanges.subscribe(val => {\n            this.isDirty = true;\n            sub.unsubscribe();\n        });\n    }\n\n    addEmpyRow(): void {\n        var total = this.items.controls.length\n        for (const item in this.items.controls) {\n            var num = parseInt(item, 10);\n            if ((1 + num) == total) {\n                var form = this.items.controls[item].get('itemName');\n                this.sub = form.valueChanges.subscribe(val => {\n                    if (form.dirty) {\n                        this.addItem()\n                    }\n                });\n            }\n        }\n    }\n\n}\n","module.exports = \"<!-- Example row of columns -->\\n<div id=\\\"home\\\" class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center mt-3\\\">\\n    <div class=\\\"col text-center\\\">\\n      <p>\\n        The Great Gift Exchange based in the USA, and will never give away your\\n        info!\\n      </p>\\n    </div>\\n  </div>\\n  <div class=\\\"row align-items-center my-5\\\">\\n    <div class=\\\"col-12 col-xl-5 offset-xl-1 col-lg-5 offset-lg-0 col-md-7 mt-3\\\">\\n      <h2 class=\\\"pr-xl-7 mr-xl-7\\\">Create a gift exchange and draw names!</h2>\\n      <p>\\n        The Great Exchange makes it easy to setup your secret santa gift\\n        exchange.\\n      </p>\\n      <ul>\\n        <li>Names are drawn randomly</li>\\n        <li>No one gets their own name</li>\\n        <li>You can exclude people from drawing certian people</li>\\n        <li>We’ll email everyone for you so everything stays a secret</li>\\n        <li>It's free!</li>\\n      </ul>\\n      <button class=\\\"btn btn-md btn-primary mt-4\\\" (click)=\\\"buttonClick()\\\">\\n        Create Your Exchange Now &raquo;\\n      </button>\\n    </div>\\n    <div class=\\\"col-12 col-xl-5 offset-xl-0 col-lg-6 offset-lg-1 col-md-5 pl-lg-8 px-sm-5 my-5 align-self-center text-lg-right text-center\\\">\\n      <img src=\\\"../assets/images/teal_giftbox.svg\\\" class=\\\"img-fluid\\\" style=\\\"max-width:350px;\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-5 pt-4 justify-content-center\\\">\\n    <div class=\\\"col col-10 text-center mt-3 pt-5 border-top\\\">\\n      <h3>Already a part of an exchange?</h3>\\n      <p>\\n        Check your email for a link to login to your exchange.<br />\\n        <a [routerLink]=\\\"['/sendLoginEmail']\\\">Or, click here to send a new email!</a>\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Angulartics2Module, Angulartics2 } from \"angulartics2\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"]\n})\nexport class HomeComponent implements OnInit {\n  constructor(private router: Router, private angulartics2: Angulartics2) {}\n\n  ngOnInit() {}\n\n  buttonClick() {\n    // this.router.navigate(['setup/step1']);\n    // console.log('click')\n    this.angulartics2.eventTrack.next({ \n      action: 'click',\n      properties: { \n        category: 'setup'\n      },\n    });\n    this.router.navigate(['/setup/step1']);\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">&nbsp;</div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <h3>Exchanges</h3>\\n      <ul>\\n        <li class=\\\"text\\\" *ngFor=\\\"let exchange of exchanges|async\\\">\\n          <a [routerLink]=\\\"[ '/exchange', exchange.id, exchange.adminUid ]\\\">\\n            {{exchange.name}}\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <h3>Users</h3>\\n      <ul>\\n        <li class=\\\"text\\\" *ngFor=\\\"let user of users | async\\\">\\n          <a (click)=\\\"getUser(user.email)\\\">{{user.name}} - {{user.email}}</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xpc3QtZXhjaGFuZ2VzL2xpc3QtZXhjaGFuZ2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DbServiceService } from \"../../services/db-service.service\";\nimport { FirestoreService } from \"src/app/services/firestore.service\";\nimport { User } from \"src/app/models/user.model\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-list-exchanges\",\n  templateUrl: \"./list-exchanges.component.html\",\n  styleUrls: [\"./list-exchanges.component.scss\"]\n})\nexport class ListExchangesComponent implements OnInit {\n  public exchanges;\n  public users;\n  public userDoc;\n  public user: User;\n\n  constructor(\n    private _dbservice: DbServiceService,\n    private fs: FirestoreService,\n    private router: Router\n  ) {\n    this.exchanges = this._dbservice.getExchanges();\n    this.users = this._dbservice.users;\n  }\n\n  ngOnInit() {\n  }\n\n  getUser(id) {\n    this._dbservice.getUser(id).subscribe(user => {\n      this.user = user as User;\n      // console.log(this.user.id);\n    });\n  }\n}\n","module.exports = \"<div class=\\\"container my-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-lg-10 justify-content-md-center\\\">\\n      <h1>Retreieve Your Email</h1>\\n      <p><a [routerLink]=\\\"['/']\\\">&laquo; Go back</a></p>\\n      <p>Enter the email address you used for the exchange and we will send you a new login link.</p>\\n      <p *ngIf=\\\"savedMsg\\\" [class.text-success]=\\\"savedMsgPass\\\" [class.text-warning]=\\\"!savedMsgPass\\\" class=\\\"font-weight-bold\\\">{{\\n        savedMsg }}</p>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-lg-8 justify-content-md-center\\\">\\n      <form class=\\\"col-6\\\" [formGroup]=\\\"emailForm\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"email\\\" [class.is-invalid]=\\\"emailForm.get('email').invalid && emailForm.get('email').touched\\\"\\n            class=\\\"form-control\\\" placeholder=\\\"Your Email Address\\\" formControlName=\\\"email\\\">\\n          <small class=\\\"text-warning\\\" *ngIf=\\\"emailForm.get('email').invalid && emailForm.get('email').touched\\\">*required\\n            and must be formatted correctly</small>\\n        </div>\\n        <button type=\\\"submit\\\" [disabled]=\\\"emailForm.invalid && emailForm.touched\\\" class=\\\"btn btn-success\\\">Send Email</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NlbmQtbG9naW4tZW1haWwvc2VuZC1sb2dpbi1lbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { SetupService } from \"src/app/services/setup.service\";\nimport { Router } from \"@angular/router\";\nimport { DbServiceService } from \"src/app/services/db-service.service\";\n\n@Component({\n  selector: \"app-send-login-email\",\n  templateUrl: \"./send-login-email.component.html\",\n  styleUrls: [\"./send-login-email.component.scss\"]\n})\nexport class SendLoginEmailComponent implements OnInit {\n  public emailForm: FormGroup;\n  public savedMsg: string;\n  public savedMsgPass: boolean;\n\n  constructor(\n    private _setupService: SetupService,\n    private router: Router,\n    private fb: FormBuilder,\n    private db: DbServiceService\n  ) {}\n\n  ngOnInit() {\n    this.emailForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.email]]\n    });\n  }\n\n  submitData() {\n    const email = this.emailForm.get('email').value;;\n    // console.log(email);\n    this.db.getUserOnce(email).then(user => {\n      if (user) {\n        // console.log(user.exchanges);\n        this.db.userRequestedEmail(email);\n        this.setSavedMsg(`An email has been sent to ${email}!`, true);\n      } else {\n        this.setSavedMsg('Email address was not found', false);\n      }\n    });\n  }\n\n  setSavedMsg(txt = \"\", pass: boolean) {\n    this.savedMsg = txt;\n    this.savedMsgPass = pass;\n    if (this.savedMsg && this.savedMsg != \"\") {\n      setTimeout(() => {\n        this.savedMsg = null;\n        this.savedMsgPass = null;\n      }, 12000);\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">&nbsp;</div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-md-center\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2>Thank You!</h2>\\n      <h4 *ngIf=\\\"savedMsg\\\" [class.text-success]=\\\"savedMsgPass\\\" [class.text-warning]=\\\"!savedMsgPass\\\" class=\\\"font-weight-bold\\\">\\n        {{ savedMsg }}\\n\\t\\t\\t</h4>\\n      <p>Please verify your email address. An email has been sent to {{ formData.adminEmail }} with a link to verify.\\n        Please complete this step, once verified we will notify everyone in your exchange.</p>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL2ZpbmFsLXN0ZXAvZmluYWwtc3RlcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { SetupService } from \"../../../services/setup.service\";\nimport { FormBuilder, FormArray, FormGroup, Validator } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-final-step\",\n  templateUrl: \"./final-step.component.html\",\n  styleUrls: [\"./final-step.component.scss\"]\n})\nexport class FinalStepComponent implements OnInit {\n  private sent: boolean;\n  public savedMsg: string;\n  public savedMsgPass: boolean;\n\n  constructor(\n    private _setupService: SetupService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  public formData = this._setupService.getData();\n\n  ngOnInit() {\n    if (!this.sent) {\n      this.send();\n      this.sent = true;\n    }\n  }\n\n  setSavedMsg(txt, pass: boolean) {\n    this.savedMsg = txt;\n    this.savedMsgPass = pass;\n    if (this.savedMsg && this.savedMsg != \"\") {\n      setTimeout(() => {\n        this.savedMsg = null;\n        this.savedMsgPass = null;\n      \n        this.router.navigate([\"/\"]);\n      \n      }, 12000);\n    }\n  }\n\n  async send() {\n    await this._setupService.sendSetupToFirestore().then(passed => {\n      if (passed) {\n        this.setSavedMsg(\"You will be redirected back to the home page in 12 seconds.\", true);\n      } else {\n        this.setSavedMsg(\"There was a problem creating your exchange. You will be returned to the starting page.\", false);\n      }\n    });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3NldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">&nbsp;</div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h3>Instructions</h3>\\n      <ul>\\n        <li>Give your exchange a name</li>\\n        <li>Set a date for your exchange</li>\\n        <li>Set a max dollar amount people should spend</li>\\n        <li>Throw your own name in the hat?</li>\\n        <li>Do you want to see who drew who's name?</li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <form #setup1form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\n        <div class=\\\"form-group\\\">\\n          <h4><label for=\\\"exchangeName\\\">Name Your Gift Exchange</label></h4>\\n          <input required minlength=\\\"4\\\" [class.is-invalid]=\\\"name.invalid && name.dirty\\\" #name='ngModel' type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"exchangeName\\\" name=\\\"exchangeName\\\" placeholder=\\\"Exchange Name\\\" [(ngModel)]=\\\"formData.name\\\">\\n          <small class=\\\"text-warning\\\" *ngIf=\\\"name.invalid && name.dirty\\\">*Exchange Must have a name greater than 3 characters</small>\\n        </div>\\n        <h4 for=\\\"datePicker\\\">Date of Exchange</h4>\\n        <div class=\\\"form-inline form-group\\\">\\n          <!-- <ngb-datepicker #d></ngb-datepicker> -->\\n          <input required placeholder=\\\"year-m-d\\\" type=\\\"text\\\" #date='ngModel' class=\\\"form-control\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" name=\\\"datePicker\\\" [(ngModel)]=\\\"formData.date\\\" /><button class=\\\"btn btn-secondary btn-sm mx-2\\\" (click)=\\\"d.toggle()\\\" novalidate type=\\\"button\\\">Date Picker</button>\\n          <div class=\\\"clearfix\\\"></div>\\n          \\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <h4><label for=\\\"exchangeBudget\\\">Max Budget Per Gift?</label></h4>\\n          <input #budget='ngModel' type=\\\"text\\\" pattern=\\\"^[$]?[0-9,]+(\\\\.[0-9]{1,2})?$\\\" [class.is-invalid]=\\\"budget.invalid && budget.dirty\\\" class=\\\"form-control form-control-lg\\\" id=\\\"exchangeBudget\\\" name=\\\"exchangeBudget\\\" placeholder=\\\"Example $20\\\" [(ngModel)]=\\\"formData.budget\\\">\\n          <small class=\\\"col-12 mt-2 pl-0 text-warning d-block\\\" *ngIf=\\\"budget.invalid && budget.dirty\\\">*Please use only numbers, $'s, commans and periods</small>\\n        </div>\\n        <!-- <h4>Each person draws # names?</h4>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input form-control-lg\\\" type=\\\"radio\\\" name=\\\"nameCountRadio\\\" id=\\\"draw1Name\\\" value=\\\"1\\\" [(ngModel)]=\\\"formData.nameCount\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"1\\\">1</label>\\n        </div>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input form-control-lg\\\" type=\\\"radio\\\" name=\\\"nameCountRadio\\\" id=\\\"draw2Name\\\" value=\\\"2\\\" [(ngModel)]=\\\"formData.nameCount\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"inlineRadio2\\\">2</label>\\n        </div>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input form-control-lg\\\" type=\\\"radio\\\" name=\\\"nameCountRadio\\\" id=\\\"draw0Name\\\" value=\\\"0\\\" [(ngModel)]=\\\"formData.nameCount\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"inlineRadio3\\\">Do not draw names</label>\\n        </div> -->\\n        <h4>Options</h4>\\n        <div class=\\\"form-group form-check\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input form-control-lg\\\" id=\\\"includeAdmin\\\" name=\\\"includeAdmin\\\" [(ngModel)]=\\\"formData.includeAdmin\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"includeAdmin\\\">Include My Name in Drawing</label>\\n        </div>\\n        <div class=\\\"form-group form-check\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input form-control-lg\\\" id=\\\"showAdminNames\\\" name=\\\"showAdminNames\\\" [(ngModel)]=\\\"formData.showAdminNames\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"showAdminNames\\\">Show me who drew who</label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button [disabled]=\\\"setup1form.form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3N0ZXAxL3N0ZXAxLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SetupService } from '../../../services/setup.service';\nimport { Angulartics2Module, Angulartics2 } from \"angulartics2\";\n\n@Component({\n\tselector: 'app-step1',\n\ttemplateUrl: './step1.component.html',\n\tstyleUrls: ['./step1.component.scss']\n})\nexport class Step1Component implements OnInit {\n\n\tconstructor(private _setupService: SetupService, private router: Router, private angulartics2: Angulartics2) { }\n\n\tngOnInit() {\n\t}\n\n\tformData = this._setupService.getData();\n\n\tsubmitData() {\n\t\tthis._setupService.addData(this.formData);\n\t\tthis.angulartics2.eventTrack.next({ \n\t\t\taction: 'go to step 2',\n\t\t\tproperties: { \n\t\t\t  category: 'setup'\n\t\t\t},\n\t\t  });\n\t\tthis.router.navigate(['setup/step2']);\n\t}\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">&nbsp;</div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <h3>Add people to the gift exchange</h3>\\n      <ul>\\n        <li>Start with yourself, even if you are not in the exchange</li>\\n        <li>Add name and email address for everyone else. Use your own email for people who can't get email (you'll receive their link)</li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-lg-8\\\">\\n      <form [formGroup]=\\\"step2Form\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\n        <h3>Your Info</h3>\\n        <div class=\\\"form-group has-feedback has-clear\\\">\\n          <input type=\\\"text\\\" [class.is-invalid]=\\\"step2Form.get('adminName').invalid && step2Form.get('adminName').touched\\\" class=\\\"form-control\\\" placeholder=\\\"Your Name\\\" formControlName=\\\"adminName\\\">\\n          <span class=\\\"form-control-clear glyphicon glyphicon-remove form-control-feedback hidden\\\"></span>\\n          <small class=\\\"text-warning\\\" *ngIf=\\\"step2Form.get('adminName').invalid && step2Form.get('adminName').touched\\\">*required</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"email\\\" [class.is-invalid]=\\\"step2Form.get('adminEmail').invalid && step2Form.get('adminEmail').touched\\\" class=\\\"form-control\\\" placeholder=\\\"Your Email Address\\\" formControlName=\\\"adminEmail\\\">\\n          <small class=\\\"text-warning\\\" *ngIf=\\\"step2Form.get('adminEmail').invalid && step2Form.get('adminEmail').touched\\\">*required and must be formatted correctly</small>\\n        </div>\\n        <h3>Add Names</h3>\\n        <div class=\\\"addNamesSection\\\">\\n\\n          <div formArrayName=\\\"exchangees\\\" *ngFor=\\\"let exchangee of step2Form.get('exchangees').controls; let i = index;\\\">\\n          \\n            <div class=\\\"form-row align-items-top\\\" [formGroupName]=\\\"i\\\">\\n              <div class=\\\"col-6\\\">\\n                <input [class.is-invalid]=\\\"getExchangees().controls[i].get('name').invalid && getExchangees().controls[i].get('name').touched\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Exchangee's Name\\\" formControlName=\\\"name\\\">\\n                <small *ngIf=\\\"getExchangees().controls[i].get('name').invalid && getExchangees().controls[i].get('name').touched\\\" class=\\\"text-warning\\\">*required</small>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <input type=\\\"email\\\" [class.is-invalid]=\\\"getExchangees().controls[i].get('email').invalid && getExchangees().controls[i].get('email').touched\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n                <small *ngIf=\\\"getExchangees().controls[i].get('email').invalid && getExchangees().controls[i].get('email').touched\\\" class=\\\"text-warning\\\">*required and must be formatted correctly</small>\\n              </div>\\n              {{ (getExchangees().controls[i].get('email').Validators) | json }}\\n            </div>\\n          </div>\\n          \\n          <button type=\\\"button\\\" class=\\\"btn-secondary btn-sm my-3\\\" (click)=\\\"addNames()\\\">Add Names</button>\\n          \\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"back()\\\">Back</button>\\n          <button type=\\\"submit\\\" [disabled]=\\\"step2Form.invalid\\\" class=\\\"btn btn-success  ml-2\\\">Next</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3N0ZXAyL3N0ZXAyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { SetupService } from \"../../../services/setup.service\";\nimport { FormBuilder, FormArray, FormGroup, Validators } from \"@angular/forms\";\nimport { controlNameBinding } from \"@angular/forms/src/directives/reactive_directives/form_control_name\";\nimport { Angulartics2 } from \"angulartics2\";\n\n@Component({\n  selector: \"app-step2\",\n  templateUrl: \"./step2.component.html\",\n  styleUrls: [\"./step2.component.scss\"]\n})\nexport class Step2Component implements OnInit {\n  constructor(\n    private _setupService: SetupService,\n    private router: Router,\n    private fb: FormBuilder,\n    private angulartics2: Angulartics2\n  ) {}\n\n  public formData = this._setupService.getData();\n  public step2Form: FormGroup;\n\n  getExchangees() {\n    return this.step2Form.get(\"exchangees\") as FormArray;\n  }\n\n  ngOnInit() {\n    this.step2Form = this.fb.group({\n      adminName: [\n        this.formData.adminName,\n        [Validators.required, Validators.minLength(3)]\n      ],\n      adminEmail: [\n        this.formData.adminEmail,\n        [Validators.required, Validators.email]\n      ],\n      exchangees: this.fb.array([])\n    });\n\n    if (\n      this.formData.hasOwnProperty(\"exchangees\") &&\n      this.formData.exchangees.length > 0\n    ) {\n      this.formData.exchangees.forEach(ex => {\n        if (ex.name != \"\" && ex.email != \"\") {\n          this.addNames(ex.name, ex.email);\n        }\n      });\n    }\n    this.addNames();\n\n    this.getExchangees().valueChanges.subscribe(controls => {\n      for (let i = 0; i < controls.length; i++) {\n        const name = this.getExchangees().controls[i].get(\"name\");\n        const email = this.getExchangees().controls[i].get(\"email\");\n        if (name.value != \"\") {\n          email.setValidators([Validators.required, Validators.email]);\n        } else {\n          email.clearValidators();\n        }\n        if (email.value != \"\") {\n          name.setValidators(Validators.required);\n        } else {\n          name.clearValidators();\n        }\n        name.updateValueAndValidity({ emitEvent: false });\n        email.updateValueAndValidity({ emitEvent: false });\n      }\n    });\n  }\n\n  createNameField(exName = \"\", exEmail = \"\"): FormGroup {\n    return this.fb.group({\n      name: [exName],\n      email: [exEmail, Validators.email]\n    });\n  }\n\n  get exchangees() {\n    return this.step2Form.get(\"exchangees\") as FormArray;\n  }\n\n  addNames(exName = \"\", exEmail = \"\") {\n    this.exchangees.push(this.createNameField(exName, exEmail));\n  }\n\n  back() {\n    this.router.navigate([\"setup/step1\"]);\n  }\n\n  get getTempId() {\n    return Math.floor(Math.random() * 100000000 + 1);\n  }\n\n  submitData() {\n    // prevent blanks, and long live exlcudes saved previously\n    var cleanedExs = [];\n    for (let i = 0; i < this.step2Form.value.exchangees.length; i++) {\n      const ex = this.step2Form.value.exchangees[i];\n      if (ex.name != \"\" && ex.email != \"\") {\n        if (this.formData.hasOwnProperty(\"exchangees\")) {\n          for (let l = 0; l < this.formData.exchangees.length; l++) {\n            const savedEx = this.formData.exchangees[l];\n            if (\n              savedEx.name === ex.name &&\n              savedEx.hasOwnProperty(\"excluded\")\n            ) {\n              ex.excluded = savedEx.excluded;\n            }\n          }\n        }\n        // ex.tempId = this.getTempId;\n        cleanedExs.push(ex);\n      }\n    }\n    // console.log(cleanedExs);\n    // add admin to exchangees if aplicable\n    if (this.formData.includeAdmin && !this.formData.adminAdded) {\n      cleanedExs.push({\n        name: this.step2Form.value.adminName,\n        email: this.step2Form.value.adminEmail,\n        isAdmin: true\n        // tempId: this.getTempId\n      });\n      this.formData.adminAdded = true;\n    }\n\n    this.step2Form.value.exchangees = cleanedExs;\n    this._setupService.addData(this.step2Form.value);\n    this.angulartics2.eventTrack.next({\n      action: \"go to step 3\",\n      properties: {\n        category: \"setup\"\n      }\n    });\n    this.router.navigate([\"setup/step3\"]);\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">&nbsp;</div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h3>Exclude people from drawing certain names</h3>\\n      <ul>\\n        <li><p>\\n          Example: If Joe and lisa are a couple and shouldnt draw eachothers names, first find joe and select Lisa's name from the drop down menu. Then find Lisa, and select Joe from the menu.\\n        </p></li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col-sm-8\\\">\\n      <form [formGroup]=\\\"step3Form\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\" formArrayName=\\\"exchangees\\\" *ngFor=\\\"let exchangee of formData.exchangees; let i = index\\\">\\n              <p>\\n              <strong>{{ exchangee.name }}</strong>\\n              <br>\\n              <small>{{ exchangee.email }}</small></p>\\n              <div class=\\\"form-group\\\">\\n                <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\" formControlName=\\\"exclude\\\" [formControlName]='i'>\\n                  <option value=\\\"\\\" default>none</option>\\n                  <!-- TODO: remove their own name from exclude list via pipe filter -->\\n                  <option *ngFor=\\\"let ex of formData.exchangees; let l = index\\\" [value]=\\\"ex.name\\\">{{ ex.name }}</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"back()\\\">Back</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success ml-2\\\">Next</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3N0ZXAzL3N0ZXAzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { SetupService } from \"../../../services/setup.service\";\nimport { FormBuilder, FormArray, FormGroup, Validator } from \"@angular/forms\";\nimport { Angulartics2 } from \"angulartics2\";\n\n@Component({\n  selector: \"app-step3\",\n  templateUrl: \"./step3.component.html\",\n  styleUrls: [\"./step3.component.scss\"]\n})\nexport class Step3Component implements OnInit {\n  constructor(\n    private _setupService: SetupService,\n    private router: Router,\n    private fb: FormBuilder,\n    private angulartics2: Angulartics2\n  ) {}\n\n  public formData = this._setupService.getData();\n\n  ngOnInit() {\n    if (\n      this.formData.hasOwnProperty(\"exchangees\") &&\n      this.formData.exchangees.length > 0\n    ) {\n      this.formData.exchangees.forEach(ex => {\n        if (ex.name != \"\" && ex.email != \"\") {\n          this.addField(ex.excluded);\n        }\n      });\n    }\n  }\n\n  step3Form = this.fb.group({\n    exchangees: this.fb.array([])\n  });\n\n  get exchangees() {\n    return this.step3Form.get(\"exchangees\") as FormArray;\n  }\n\n  addField(selected = \"\") {\n    this.exchangees.push(this.fb.control(selected));\n  }\n\n  submitData() {\n    var exchangees = [];\n    for (let i = 0; i < this.formData.exchangees.length; i++) {\n      const savedEx = this.formData.exchangees[i];\n      const stepEx = this.step3Form.value.exchangees[i];\n      savedEx[\"excluded\"] = stepEx || \"\";\n      exchangees.push(savedEx);\n    }\n\n    const res = { exchangees: exchangees };\n\n    this._setupService.addData(res);\n    this.angulartics2.eventTrack.next({\n      action: \"go to step 4\",\n      properties: {\n        category: \"setup\"\n      }\n    });\n    this.router.navigate([\"setup/step4\"]);\n  }\n\n  back() {\n    this.router.navigate([\"setup/step2\"]);\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">&nbsp;</div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h3>Complete the setup by writing everyone a message</h3>\\n      <ul>\\n        <li>Welcome everyone to the gift exchange!</li>\\n        <li>Submit it to save your exchange.</li>\\n        <li>Next we'll email you to verify your email address is correct.</li>\\n        <li>Once verified, we'll email everyone in your exchange with the names they drew!</li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <form [formGroup]=\\\"step4Form\\\" novalidate (ngSubmit)=\\\"submitData()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleFormControlTextarea1\\\">Email Welcome Message</label>\\n          <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"5\\\" formControlName=\\\"welcomeMessage\\\"></textarea>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"back()\\\">Back</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success ml-2\\\">Finish and Verify Your Email Address</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHVwL3N0ZXA0L3N0ZXA0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SetupService } from '../../../services/setup.service';\nimport { FormBuilder, FormArray, FormGroup, Validator } from '@angular/forms';\nimport { Angulartics2 } from 'angulartics2';\n\n@Component({\n  selector: 'app-step4',\n  templateUrl: './step4.component.html',\n  styleUrls: ['./step4.component.scss']\n})\nexport class Step4Component implements OnInit {\n\n  constructor(\n    private _setupService: SetupService,\n    private router: Router,\n    private fb: FormBuilder,\n    private angulartics2: Angulartics2\n  ) { }\n\n  public formData = this._setupService.getData();\n  \n  step4Form = this.fb.group({\n    welcomeMessage: [this.formData.welcomeMessage],\n  });\n\n  ngOnInit() {\n  }\n\n  back() {\n    this.router.navigate(['setup/step3']);\n  }\n\n  submitData() {\n    this._setupService.addData(this.step4Form.value);\n    this.angulartics2.eventTrack.next({ \n\t\t\taction: 'go to step 4',\n\t\t\tproperties: { \n\t\t\t  category: 'setup'\n\t\t\t},\n\t\t  });\n    this.router.navigate(['setup/finalize']);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  AngularFirestore,\n  AngularFirestoreDocument,\n  AngularFirestoreCollection\n} from \"@angular/fire/firestore\";\nimport { Observable } from \"rxjs/Observable\";\nimport \"rxjs/add/operator/map\";\nimport { FirestoreService } from \"./firestore.service\";\nimport { Exchange } from \"../models/exchange.model\";\nimport { User } from \"../models/user.model\";\nimport { WishlistItem } from \"../models/wishlist.model\";\nimport \"rxjs/add/operator/take\";\nimport { firestore } from \"firebase\";\n\n@Injectable()\nexport class DbServiceService {\n  exchangesCollection: AngularFirestoreCollection<Exchange>;\n  WishlistCollection: AngularFirestoreCollection<WishlistItem>;\n  WishlistDoc: AngularFirestoreDocument<WishlistItem>;\n  PeopleCollection: AngularFirestoreCollection<User>;\n  exchanges: Observable<Exchange[]>;\n  exDoc: AngularFirestoreDocument<Exchange>;\n  ex: Observable<Exchange>;\n  usersCollection: AngularFirestoreCollection<User>;\n  users: Observable<User[]>;\n  usersDoc: AngularFirestoreDocument<User>;\n  user: Observable<User>;\n  exchCollection: AngularFirestoreCollection<User>;\n  exchs: Observable<User[]>;\n  exchDoc: AngularFirestoreDocument<User>;\n  exch: Observable<User>;\n\n  constructor(public afs: AngularFirestore, public db: FirestoreService) {\n    //this.exchanges = this.afs.collection('exchanges').valueChanges();\n\n    this.exchangesCollection = this.afs.collection(\"exchanges\", ref =>\n      ref.orderBy(\"name\", \"asc\")\n    );\n\n    this.exchanges = this.exchangesCollection.snapshotChanges().map(changes => {\n      return changes.map(a => {\n        const data = a.payload.doc.data() as Exchange;\n        data.id = a.payload.doc.id;\n        return data;\n      });\n    });\n\n    this.usersCollection = this.afs.collection(\"users\", ref =>\n      ref.orderBy(\"name\", \"asc\")\n    );\n    this.users = this.usersCollection.snapshotChanges().map(changes => {\n      return changes.map(a => {\n        const data = a.payload.doc.data() as User;\n        data.id = a.payload.doc.id;\n        return data;\n      });\n    });\n  }\n\n  getExchanges() {\n    return this.db.colWithIds$(\"exchanges\");\n  }\n\n  getExchange(id): Observable<Exchange> {\n    return this.db.doc$(`exchanges/${id}`);\n  }\n\n  async addExchange(exchange: Exchange): Promise<string> {\n    const data = {\n      name: exchange.name,\n      date: exchange.date,\n      budget: exchange.budget,\n      // nameCount: exchange.nameCount,\n      includeAdmin: exchange.includeAdmin,\n      adminName: exchange.adminName,\n      adminEmail: exchange.adminEmail,\n      // adminUid: exchange.adminUid,\n      welcomeMessage: exchange.welcomeMessage || \"\"\n    };\n\n    // db.set('items/ID', data) })\n\n    // const docRef = await this.afs.collection('users').add(data);\n    const id = await this.afs.createId();\n    const docRef = await this.db.set(`exchanges/${id}`, data);\n    return id;\n  }\n\n  deleteExchange(exchange: Exchange) {\n    this.exDoc = this.afs.doc(`exchanges/${exchange.id}`);\n    this.exDoc.delete();\n  }\n\n  updateExchange(id, data) {\n    const exDoc = this.afs.doc(`exchanges/${id}`);\n    this.db.update(exDoc, data);\n  }\n\n  async createAdminUid(exId) {\n    const id = await this.afs.createId();\n    this.updateExchange(exId, {'adminUid': id})\n  }\n\n  async addExchangeesToExchange(exchangeId, data): Promise<any> {\n    const ref = this.afs\n      .collection<Exchange>(`exchanges`)\n      .doc(exchangeId)\n      .collection<User>(\"exchangees\");\n    return await this.db.upsertExchangeeUser(ref, data);\n  }\n\n  updateExchagee(exId, id, data) {\n    const exchDoc = this.afs\n      .collection<Exchange>(`exchanges`)\n      .doc(exId)\n      .collection<User>(\"exchangees\")\n      .doc(id);\n    return this.db.update(exchDoc, data);\n  }\n\n  getUsers() {\n    return this.users;\n  }\n\n  getUser(id): Observable<User> {\n    return this.db.docWithIds$(`users/${id}`);\n  }\n\n  getUserOnce(id) {\n    // return this.afs\n    //   .collection(\"users\")\n    //   .doc(id)\n    //   .valueChanges()\n    //   .take(1)\n    //   .toPromise()\n    //   .then((user: User) => user);\n    const ref = this.afs.collection(\"users\").doc(id);\n    return this.db.docWithIds$(ref).take(1)\n      .toPromise().then((user: User) => user);\n  }\n\n  getExchangeOnce(id) {\n    // return this.afs\n    //   .collection(\"users\")\n    //   .doc(id)\n    //   .valueChanges()\n    //   .take(1)\n    //   .toPromise()\n    //   .then((user: User) => user);\n    const ref = this.afs.collection(\"exchanges\").doc(id);\n    return this.db.docWithIds$(ref).take(1)\n      .toPromise().then((exchange: Exchange) => exchange);\n  }\n\n  getExchangee(exId, id): Observable<any> {\n    this.exchDoc = this.afs\n      .collection<Exchange>(`exchanges`)\n      .doc(exId)\n      .collection<User>(\"exchangees\")\n      .doc(id);\n    return this.db.docWithIds$(this.exchDoc);\n  }\n\n  getExchangePeople(exId): Observable<any> {\n    this.PeopleCollection = this.afs\n      .collection<Exchange>(`exchanges`)\n      .doc(exId)\n      .collection<User>(\"exchangees\");\n    return this.db.colWithIds$(this.PeopleCollection);\n  }\n\n  getExchangePeopleOnce(exId) {\n    this.PeopleCollection = this.afs\n      .collection<Exchange>(`exchanges`)\n      .doc(exId)\n      .collection<User>(\"exchangees\");\n    return this.db.colWithIds$(this.PeopleCollection).take(1)\n      .toPromise().then((people: [User]) => people);\n  }\n\n  getWishlist(exId, id): Observable<any> {\n    this.WishlistCollection = this.afs\n      .collection<Exchange>(`exchanges`)\n      .doc(exId)\n      .collection<User>(\"exchangees\")\n      .doc(id)\n      .collection(\"wishlist\", ref => ref.orderBy(\"createdAt\", \"asc\"));\n    return this.db.colWithIds$(this.WishlistCollection);\n  }\n\n  setWishList(exId, id, data: Array<any>): Promise<any> {\n    this.WishlistCollection = this.afs\n      .collection<Exchange>(`exchanges`)\n      .doc(exId)\n      .collection<User>(\"exchangees\")\n      .doc(id)\n      .collection(\"wishlist\");\n    data.forEach(async item => {\n      if (item.itemName != \"\") {\n        var cleanItem = { itemName: item.itemName };\n        if (item.itemUrl != \"\") {\n          cleanItem[\"itemUrl\"] = item.itemUrl;\n        }\n        if (item.itemUid != \"\") {\n          cleanItem[\"itemUid\"] = item.itemUid;\n        }\n        var itemUid = await this.db.upsertItem(\n          this.WishlistCollection,\n          cleanItem\n        );\n        item.itemUid = itemUid;\n      }\n    });\n    return;\n  }\n\n  removeWishlistItem(exId, userId, uid) {\n    this.WishlistDoc = this.afs\n      .collection<Exchange>(`exchanges`)\n      .doc(exId)\n      .collection<User>(\"exchangees\")\n      .doc(userId)\n      .collection(\"wishlist\")\n      .doc(uid);\n    this.WishlistDoc.delete();\n  }\n\n  async addUser(user, exId = null): Promise<void> {\n    const data = {\n      name: user.name,\n      email: user.email\n    };\n\n    await this.db.upsertUser(`users/${data.email}`, data, true);\n    if (!!exId) {\n      this.addExchangeIdToUser(data.email, exId);\n    }\n  }\n\n  deleteUser(user: User) {\n    this.usersDoc = this.afs.doc(`users/${user.id}`);\n    this.usersDoc.delete();\n  }\n\n  updateUser(user: User) {\n    this.usersDoc = this.afs.doc(`users/${user.id}`);\n    this.usersDoc.update(user);\n  }\n\n  addExchangeIdToUser(userId, exchangeId) {\n    const ref = this.afs.collection(\"users\").doc(userId);\n    ref.update({ exchanges: firestore.FieldValue.arrayUnion(exchangeId) });\n  }\n\n  userRequestedEmail(userEmail): Promise<any> {\n    const ref = this.afs.collection(\"users\").doc(userEmail);\n    const stamp = this.db.timestamp;\n    // console.log(stamp);\n    return ref.update({ requestedEmail: this.db.timestamp });\n  }\n}\n","///// https://angularfirebase.com/lessons/firestore-advanced-usage-angularfire/#4-Upsert-Update-or-Create-Method\n///// https://angularfirebase.com/lessons/firestore-advanced-usage-angularfire/#4-Upsert-Update-or-Create-Method\n///// https://angularfirebase.com/lessons/firestore-advanced-usage-angularfire/#4-Upsert-Update-or-Create-Method\n///// https://angularfirebase.com/lessons/firestore-advanced-usage-angularfire/#4-Upsert-Update-or-Create-Method\n\nimport { Injectable } from \"@angular/core\";\nimport {\n  AngularFirestore,\n  AngularFirestoreDocument,\n  AngularFirestoreCollection,\n  DocumentChangeAction,\n  Action,\n  DocumentSnapshotDoesNotExist,\n  DocumentSnapshotExists\n} from \"@angular/fire/firestore\";\nimport { Observable, from } from \"rxjs\";\nimport {\n  map,\n  tap,\n  take,\n  switchMap,\n  mergeMap,\n  expand,\n  takeWhile\n} from \"rxjs/operators\";\n\nimport * as firebase from \"firebase/app\";\n\ntype CollectionPredicate<T> = string | AngularFirestoreCollection<T>;\ntype DocPredicate<T> = string | AngularFirestoreDocument<T>;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class FirestoreService {\n  constructor(private afs: AngularFirestore) {}\n\n  /// **************\n  /// Get a Reference\n  /// **************\n\n  col<T>(ref: CollectionPredicate<T>, queryFn?): AngularFirestoreCollection<T> {\n    return typeof ref === \"string\" ? this.afs.collection<T>(ref, queryFn) : ref;\n  }\n\n  doc<T>(ref: DocPredicate<T>): AngularFirestoreDocument<T> {\n    return typeof ref === \"string\" ? this.afs.doc<T>(ref) : ref;\n  }\n\n  /// **************\n  /// Get Data\n  /// **************\n\n  doc$<T>(ref: DocPredicate<T>): Observable<T> {\n    return this.doc(ref)\n      .snapshotChanges()\n      .pipe(\n        map(\n          (\n            doc: Action<\n              DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>\n            >\n          ) => {\n            const data = doc.payload.data();\n            return data as T;\n          }\n        )\n      );\n  }\n\n  docWithIds$<T>(ref: DocPredicate<T>): Observable<T> {\n    return this.doc(ref)\n      .snapshotChanges()\n      .pipe(\n        map(\n          (\n            doc: Action<\n              DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>\n            >\n          ) => {\n            if (doc.payload.exists) {\n              const data = doc.payload.data();\n              data[\"id\"] = doc.payload.id;\n              return data as T;\n            } else {\n              return null;\n            }\n          }\n        )\n      );\n  }\n\n  col$<T>(ref: CollectionPredicate<T>, queryFn?): Observable<T[]> {\n    return this.col(ref, queryFn)\n      .snapshotChanges()\n      .pipe(\n        map((docs: DocumentChangeAction<T>[]) => {\n          return docs.map((a: DocumentChangeAction<T>) =>\n            a.payload.doc.data()\n          ) as T[];\n        })\n      );\n  }\n\n  /// with Ids\n  colWithIds$<T>(ref: CollectionPredicate<T>, queryFn?): Observable<any[]> {\n    return this.col(ref, queryFn)\n      .snapshotChanges()\n      .pipe(\n        map((actions: DocumentChangeAction<T>[]) => {\n          return actions.map((a: DocumentChangeAction<T>) => {\n            const data: Object = a.payload.doc.data() as T;\n            const id = a.payload.doc.id;\n            return { id, ...data };\n          });\n        })\n      );\n  }\n\n  /// **************\n  /// Write Data\n  /// **************\n\n  // *** Usage\n\n  // db.update('items/ID', data) }) // adds updatedAt field\n  // db.set('items/ID', data) })    // adds createdAt field\n  // db.add('items', data) })       // adds createdAt field\n\n  /// Firebase Server Timestamp\n  get timestamp() {\n    return firebase.firestore.FieldValue.serverTimestamp();\n  }\n\n  set<T>(ref: DocPredicate<T>, data: any): Promise<void> {\n    const timestamp = this.timestamp;\n    return this.doc(ref).set({\n      ...data,\n      updatedAt: timestamp,\n      createdAt: timestamp\n    });\n  }\n\n  update<T>(ref: DocPredicate<T>, data: any): Promise<void> {\n    return this.doc(ref).update({\n      ...data,\n      updatedAt: this.timestamp\n    });\n  }\n\n  delete<T>(ref: DocPredicate<T>): Promise<void> {\n    return this.doc(ref).delete();\n  }\n\n  add<T>(\n    ref: CollectionPredicate<T>,\n    data\n  ): Promise<firebase.firestore.DocumentReference> {\n    const timestamp = this.timestamp;\n    return this.col(ref).add({\n      ...data,\n      updatedAt: timestamp,\n      createdAt: timestamp\n    });\n  }\n\n  geopoint(lat: number, lng: number): firebase.firestore.GeoPoint {\n    return new firebase.firestore.GeoPoint(lat, lng);\n  }\n\n  /// If doc exists update, otherwise set\n  upsertUser<T>(ref: DocPredicate<T>, data: any, update = true): Promise<void> {\n    const doc = this.doc(ref)\n      .snapshotChanges()\n      .pipe(take(1))\n      .toPromise();\n\n    return doc.then(\n      (\n        snap: Action<DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>>\n      ) => {\n        return snap.payload.exists\n          ? update\n            ? this.update(ref, data)\n            : null\n          : this.set(ref, data);\n      }\n    );\n  }\n\n  upsertExchangeeUser<T>(\n    ref: CollectionPredicate<any>,\n    data: any\n  ): Promise<void> {\n    const uid = data.id ? data.id : this.afs.createId();\n    const doc = this.col(ref)\n      .doc(uid)\n      .snapshotChanges()\n      .pipe(take(1))\n      .toPromise();\n\n    return doc.then(\n      (\n        snap: Action<DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>>\n      ) => {\n        snap.payload.exists\n          ? this.update(this.col(ref).doc(uid), data)\n          : this.set(this.col(ref).doc(uid), data);\n        return uid;\n      }\n    );\n  }\n\n  upsertItem<T>(\n    ref: CollectionPredicate<T>,\n    data: any,\n    update = true\n  ): Promise<void> {\n    if (!data.hasOwnProperty(\"itemUid\")) {\n      const itemUid = this.afs.createId();\n      data[\"itemUid\"] = itemUid;\n      return this.set(this.col(ref).doc(data.itemUid), data);\n    } else {\n      return update ? this.update(this.col(ref).doc(data.itemUid), data) : null;\n    }\n  }\n\n  /// **************\n  /// Inspect Data\n  /// **************\n\n  inspectDoc(ref: DocPredicate<any>): void {\n    const tick = new Date().getTime();\n    this.doc(ref)\n      .snapshotChanges()\n      .pipe(\n        take(1),\n        tap(\n          (\n            d: Action<\n              DocumentSnapshotDoesNotExist | DocumentSnapshotExists<any>\n            >\n          ) => {\n            const tock = new Date().getTime() - tick;\n            // console.log(`Loaded Document in ${tock}ms`, d);\n          }\n        )\n      )\n      .subscribe();\n  }\n\n  inspectCol(ref: CollectionPredicate<any>): void {\n    const tick = new Date().getTime();\n    this.col(ref)\n      .snapshotChanges()\n      .pipe(\n        take(1),\n        tap((c: DocumentChangeAction<any>[]) => {\n          const tock = new Date().getTime() - tick;\n          // console.log(`Loaded Collection in ${tock}ms`, c);\n        })\n      )\n      .subscribe();\n  }\n\n  /// **************\n  /// Create and read doc references\n  /// **************\n\n  /// create a reference between two documents\n  connect(host: DocPredicate<any>, key: string, doc: DocPredicate<any>) {\n    return this.doc(host).update({ [key]: this.doc(doc).ref });\n  }\n\n  /// returns a documents references mapped to AngularFirestoreDocument\n  docWithRefs$<T>(ref: DocPredicate<T>) {\n    return this.doc$(ref).pipe(\n      map((doc: T) => {\n        for (const k of Object.keys(doc)) {\n          if (doc[k] instanceof firebase.firestore.DocumentReference) {\n            doc[k] = this.doc(doc[k].path);\n          }\n        }\n        return doc;\n      })\n    );\n  }\n\n  /// **************\n  /// Atomic batch example\n  /// **************\n\n  /// Just an example, you will need to customize this method.\n  atomic() {\n    const batch = firebase.firestore().batch();\n    /// add your operations here\n\n    const itemDoc = firebase.firestore().doc(\"items/myCoolItem\");\n    const userDoc = firebase.firestore().doc(\"users/userId\");\n\n    const currentTime = this.timestamp;\n\n    batch.update(itemDoc, { timestamp: currentTime });\n    batch.update(userDoc, { timestamp: currentTime });\n\n    /// commit operations\n    return batch.commit();\n  }\n\n  /**\n   * Delete a collection, in batches of batchSize. Note that this does\n   * not recursively delete subcollections of documents in the collection\n   * from: https://github.com/AngularFirebase/80-delete-firestore-collections/blob/master/src/app/firestore.service.ts\n   */\n  deleteCollection(path: string, batchSize: number): Observable<any> {\n    const source = this.deleteBatch(path, batchSize);\n\n    // expand will call deleteBatch recursively until the collection is deleted\n    return source.pipe(\n      expand(val => this.deleteBatch(path, batchSize)),\n      takeWhile(val => val > 0)\n    );\n  }\n\n  // Detetes documents as batched transaction\n  private deleteBatch(path: string, batchSize: number): Observable<any> {\n    const colRef = this.afs.collection(path, ref =>\n      ref.orderBy(\"__name__\").limit(batchSize)\n    );\n\n    return colRef.snapshotChanges().pipe(\n      take(1),\n      mergeMap((snapshot: DocumentChangeAction<{}>[]) => {\n        // Delete documents in a batch\n        const batch = this.afs.firestore.batch();\n        snapshot.forEach(doc => {\n          batch.delete(doc.payload.doc.ref);\n        });\n\n        return from(batch.commit()).pipe(map(() => snapshot.length));\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title, Meta } from \"@angular/platform-browser\";\nimport { Router, NavigationEnd, ActivatedRoute } from \"@angular/router\";\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SEOService {\n  constructor(\n    private router: Router, \n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private metaService: Meta,\n  ) {}\n  \n  public addSeoData(): void {\n    this.router.events.pipe(\n      filter((event: any) => event instanceof NavigationEnd)\n  ).subscribe(() => {\n        var root = this.router.routerState.snapshot.root;\n        while (root) {\n          if (root.children && root.children.length) {\n            root = root.children[0];\n          } else if (root.data && root.data[\"title\"]) {\n            this.titleService.setTitle(root.data[\"title\"] + \" | The Great Gift Exchange\");\n            let tags = root.data[\"metatags\"];\n            for (let tag in tags) {\n              this.metaService.addTag({ name: tag, content: tags[tag] });\n            }\n            return;\n          } else {\n            return;\n          }\n        }\n      });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { DbServiceService } from \"../services/db-service.service\";\nimport { User } from \"../models/user.model\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SetupService {\n  private setupData;\n\n  constructor(private db: DbServiceService) {\n    this.setupData = {\n      // adminame: \"Jacob Heisterkamp\",\n      // adminEmail: \"jmheist@gmail.com\",\n      // exchangees: [\n      //   {\n      //     name: \"stacey\",\n      //     email: \"stacey@email.com\",\n      //     excluded: \"dave\",\n      //   },\n      //   {\n      //     name: \"dave\",\n      //     email: \"dave@email.com\",\n      //     excluded: \"\",\n      //   },\n      //   {\n      //     name: \"deb\",\n      //     email: \"deb@email.com\",\n      //     excluded: \"Jacob Heisterkamp\",\n      //   },\n      //   {\n      //     name: \"grant\",\n      //     email: \"grant@email.com\",\n      //     excluded: \"\",\n      //   },\n      //   {\n      //     name: \"kristin\",\n      //     email: \"kristin@email.com\",\n      //     excluded: \"\",\n      //   }\n      // ],\n      // name: \"Best Heisterkamp Family Exchange\",\n      // date: { year: 2018, month: 11, day: 15 },\n      // budget: \"20\",\n      // nameCount: \"1\",\n      // includeAdmin: true,\n      // welcomeMessage: \"Hello Everyone!\",\n      // adminName: \"Jacob Heisterkamp\"\n    };\n  }\n\n  addData(data) {\n    if (data) {\n      for (let key in data) {\n        this.setupData[key] = data[key];\n      }\n    }\n  }\n\n  async createExchange() {\n    let exchangees = {};\n    let adminSet = false;\n    // console.log(\"createExchange(): Starting\");\n    this.setupData.uid = await this.db.addExchange(this.setupData);\n    const properties = Object.keys(this.setupData.exchangees);\n    for (const prop of properties) {\n      await this.db\n        .addExchangeesToExchange(\n          this.setupData.uid,\n          this.setupData.exchangees[prop]\n        )\n        .then(async exId => {\n          if (this.setupData.exchangees[prop].isAdmin) {\n            await this.db.updateExchange(this.setupData.uid, {'adminUid': exId});\n            adminSet = await true;\n            // console.log(adminSet);\n          }\n          exchangees[exId] = await this.setupData.exchangees[prop];\n        });\n    }\n    await this.addDrawnIds(exchangees);\n    // add adminUid to exchange\n    // console.log(adminSet);\n    if (!adminSet) {\n      await this.db.createAdminUid(this.setupData.uid);\n    }\n    // console.log(\"createExchange(): Finished\");\n  }\n\n  async addDrawnIds(exchangees) {\n    // console.log(\"addDrawnIds(): Starting\");\n    const properties = Object.keys(exchangees);\n    for (const id of properties) {\n      let ex = exchangees[id];\n\n      for (const drawnId of properties) {\n        let exDrawn = exchangees[drawnId];\n        if (ex.nameDrawn === exDrawn.name) {\n          ex.drawnUid = drawnId;\n        }\n      }\n\n      if (!!ex.drawnUid) {\n        await this.db.updateExchagee(this.setupData.uid, id, ex);\n      }\n\n    }\n    // console.log(\"addDrawnIds(): Finished\");\n    return;\n  }\n\n  async addUsers() {\n    // console.log(\"addUsers(): Started\");\n    // add admin if not included\n    if (!this.setupData.includeAdmin) {\n      const admin = {'name': this.setupData.adminName, 'email': this.setupData.adminEmail}\n      // console.log(`adding ${admin.name}`)\n      await this.db.addUser(admin, this.setupData.uid);\n    }\n    const properties = Object.keys(this.setupData.exchangees);\n    for (const prop of properties) {\n      var user = this.setupData.exchangees[prop];\n      // console.log(`adding ${user.name}`)\n      await this.db.addUser(user, this.setupData.uid);\n    }\n    // console.log(\"addUsers(): Completed\");\n  }\n  async checkData() {\n    let goodData = true;\n    const list = ['name', 'date', 'budget', 'exchangees', 'adminName', 'adminEmail' ];\n    for (const atrib of list) {\n      if (!this.setupData.hasOwnProperty(atrib)){\n        goodData = false;\n      }\n    }\n    return goodData;\n  }\n\n  async sendSetupToFirestore(): Promise<boolean> {\n    const passed = await this.checkData();\n    if (passed) {\n      await this.drawNames();\n      await this.createExchange();\n      await this.addUsers();\n      return this.finish();\n    } else {\n      // console.log('the data was bad.')\n      return false;\n    }\n  }\n\n  finish() {\n    this.setupData = {};\n    // console.log('im done');\n    return true;\n  }\n\n  printData() {\n    // console.log(this.setupData ? this.setupData : \"no data in this.setupData\");\n  }\n\n  getData() {\n    return this.setupData;\n  }\n\n  async drawNames(prod = true) {\n    let errors = false;\n    let people = [];\n    if (prod) {\n      people = this.setupData.exchangees;\n    } else {\n      people = Object.assign([], this.setupData.exchangees);\n    }\n    const verifyGiftPartners = people =>\n      people.every(person => person.nameDrawn);\n    const setNameDrawnToBlank = people =>\n      people.forEach(person => (person.nameDrawn = \"\"));\n\n    //Knuth shuffle\n    const shuffleArray = array => {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n    };\n\n    const assignGiftPartners = function(people) {\n      var peopleLeftToAssign = people.map(person => person.name);\n      // console.log(peopleLeftToAssign);\n      people.forEach(function(person) {\n        var choices = peopleLeftToAssign.filter(function(personToAssign) {\n          return (\n            personToAssign != person.name && personToAssign != person.excluded\n            // person.past.indexOf(personToAssign) === -1\n          );\n        });\n        if (choices.length > 1) {\n          shuffleArray(choices);\n        }\n        if (choices.length === 0) {\n        } else {\n          // console.log(choices);\n          person.nameDrawn = choices[0];\n          var index = peopleLeftToAssign.indexOf(choices[0]);\n          peopleLeftToAssign.splice(index, 1);\n        }\n      });\n    };\n\n    let allAssigned = false;\n    let loopCount = 0;\n    while (!allAssigned) {\n      loopCount++;\n      assignGiftPartners(people);\n      allAssigned = verifyGiftPartners(people);\n      //exit loop if going too long\n      if (loopCount > 50) {\n        // console.log(\"Something went wrong with the assignment\");\n        errors = true;\n        break;\n      }\n      if (!allAssigned) {\n        setNameDrawnToBlank(people);\n      }\n    }\n\n    //save choices into database\n    if (errors) {\n      // console.log(\"there were errors while drawing names\");\n    } else {\n      // console.log(people);\n    }\n    // console.log(\"names drawn\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { DbServiceService } from './db-service.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  public emailToUpdateId: string;\n  private activeUserId: string;\n  public currentUser: User;\n\n  constructor(\n    private db: DbServiceService\n    ) {}\n\n  setActiveUserId(id) {\n    this.activeUserId = id;\n  }\n  \n  getActiveUserId() {\n    return this.activeUserId;\n  }\n}\n","module.exports = \"<div class=\\\"container mt-8 pt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <p>&copy;Straylight Designs</p>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\\n\\n\\n\\n\\n<div id=\\\"header\\\" class=\\\"container-fluid py-4 mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\">\\n    </div>\\n    <div class=\\\"col text-center\\\">\\n        <a [routerLink]=\\\"['/']\\\"><img id=\\\"logo\\\" src=\\\"../assets/images/logo_outlines.svg\\\" class=\\\"img-fluid\\\"></a>\\n    </div>\\n    <div class=\\\"col-sm-2 text-right\\\">\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<!-- admin nav bar  -->\\n<!-- <nav class=\\\"navbar navbar-expand-md navbar-dark static-top bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{ title }}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/step1\\\" routerLinkActive=\\\"active\\\">Step 1</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/step2\\\" routerLinkActive=\\\"active\\\">Step 2</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/step3\\\" routerLinkActive=\\\"active\\\">Step 3</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/step4\\\" routerLinkActive=\\\"active\\\">Step 4</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/setup/finalize\\\" routerLinkActive=\\\"active\\\">finalize</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/list-all\\\" routerLinkActive=\\\"active\\\">list-all</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlL25hdi9uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  title: string = 'Gift Exchange';\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n  \tapiKey: \"AIzaSyCcA6KyePSLIA3WvXVRjMYke_6PasHpVvk\",\n    authDomain: \"giftexchange-572f3.firebaseapp.com\",\n    databaseURL: \"https://giftexchange-572f3.firebaseio.com\",\n    projectId: \"giftexchange-572f3\",\n    storageBucket: \"giftexchange-572f3.appspot.com\",\n    messagingSenderId: \"184436074227\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}